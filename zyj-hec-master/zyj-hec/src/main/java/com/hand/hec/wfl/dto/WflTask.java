package com.hand.hec.wfl.dto;

/**
 * Auto Generated By Hap Code Generator
 **/

import javax.persistence.GeneratedValue;
import javax.persistence.Id;

import com.hand.hap.core.BaseConstants;
import com.hand.hap.core.annotation.Children;
import com.hand.hap.mybatis.annotation.ExtensionAttribute;
import com.hand.hap.mybatis.common.query.*;
import lombok.*;
import org.hibernate.validator.constraints.Length;

import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.criteria.JoinType;

import com.hand.hap.system.dto.BaseDTO;
import org.hibernate.validator.constraints.NotEmpty;
import com.hand.hap.core.annotation.MultiLanguageField;
import com.hand.hap.core.annotation.MultiLanguage;

import java.util.List;
import java.util.Map;


@MultiLanguage
@ExtensionAttribute(disable = true)
@Table(name = "wfl_task")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@ToString
public class WflTask extends BaseDTO {

    public static final String FIELD_TASK_ID = "taskId";
    public static final String FIELD_PROCESS_ID = "processId";
    public static final String FIELD_TASK_CODE = "taskCode";
    public static final String FIELD_TASK_NAME = "taskName";
    public static final String FIELD_TASK_TYPE = "taskType";
    public static final String FIELD_PROCESS_PAGE_ID = "processPageId";
    public static final String FIELD_VIEW_PAGE_ID = "viewPageId";
    public static final String FIELD_ARRIVE_PROCEDURE_ID = "arriveProcedureId";
    public static final String FIELD_DEPART_PROCEDURE_ID = "departProcedureId";
    public static final String FIELD_RECEIVE_TYPE = "receiveType";

    public static final String ELEMENT_TASK = "TASK";

    public static final String TASK_TYPE_AUTO = "AUTO";
    public static final String TASK_TYPE_USER = "USER";
    public static final String TASK_TYPE_SUB_PROCESS = "SUB_PROCESS";

    public static final String TASK_RELATION_AFTER = "AFTER";
    public static final String TASK_RELATION_BEFORE = "BEFORE";
    public static final String TASK_RELATION_UNREACHABLE = "UNREACHABLE";


    /**
     * 任务ID
     */
    @Id
    @GeneratedValue
    @Where
    private Long taskId;

    /**
     * 工作流ID
     */
    @Where
    private Long processId;

    /**
     * 任务代码
     */
    @NotEmpty
    @Length(max = 30)
    @Where(comparison = Comparison.LIKE)
    private String taskCode;

    /**
     * 任务名称
     */
    @Length(max = 240)
    @MultiLanguageField
    @Where(comparison = Comparison.LIKE)
    private String taskName;

    /**
     * 任务类型
     */
    @NotEmpty
    @Length(max = 30)
    @Where
    private String taskType;

    /**
     * 操作页面ID
     */
    @JoinTable(name = "processPageJoin", joinMultiLanguageTable = true, target = WflPage.class, type = JoinType.LEFT,
                    on = {@JoinOn(joinField = WflPage.FIELD_PAGE_ID),
                            @JoinOn(joinField = BaseDTO.FIELD_LANG, joinExpression = BaseConstants.PLACEHOLDER_LOCALE)})
    private Long processPageId;

    @Transient
    @JoinColumn(joinName = "processPageJoin", field = WflPage.FIELD_PAGE_NAME)
    private String processPageName;

    /**
     * 查看页面ID
     */
    @JoinTable(name = "viewPageJoin", joinMultiLanguageTable = true, target = WflPage.class, type = JoinType.LEFT,
                    on = {@JoinOn(joinField = WflPage.FIELD_PAGE_ID),
                            @JoinOn(joinField = BaseDTO.FIELD_LANG, joinExpression = BaseConstants.PLACEHOLDER_LOCALE)})
    private Long viewPageId;

    @Transient
    @JoinColumn(joinName = "viewPageJoin", field = WflPage.FIELD_PAGE_NAME)
    private String viewPageName;

    /**
     * 抵达任务处理过程ID
     */
    @JoinTable(name = "arriveProcedureJoin", joinMultiLanguageTable = true, target = WflProcedure.class,
                    type = JoinType.LEFT, on = {@JoinOn(joinField = WflProcedure.FIELD_PROCEDURE_ID),
                            @JoinOn(joinField = BaseDTO.FIELD_LANG, joinExpression = BaseConstants.PLACEHOLDER_LOCALE)})
    private Long arriveProcedureId;

    @Transient
    @JoinColumn(joinName = "arriveProcedureJoin", field = WflProcedure.FIELD_PROCEDURE_NAME)
    private String arriveProcedureName;

    /**
     * 离开任务处理过程ID
     */
    @JoinTable(name = "departProcedureJoin", joinMultiLanguageTable = true, target = WflProcedure.class,
                    type = JoinType.LEFT, on = {@JoinOn(joinField = WflProcedure.FIELD_PROCEDURE_ID),
                            @JoinOn(joinField = BaseDTO.FIELD_LANG, joinExpression = BaseConstants.PLACEHOLDER_LOCALE)})
    private Long departProcedureId;

    @Transient
    @JoinColumn(joinName = "departProcedureJoin", field = WflProcedure.FIELD_PROCEDURE_NAME)
    private String departProcedureName;

    /**
     * 接收类型
     */
    @Length(max = 30)
    private String receiveType;

    @Transient
    @JoinCode(code = "WFL_RECEIVE_TYPE", joinKey = FIELD_RECEIVE_TYPE)
    private String receiveTypeName;

    @Transient
    @JoinCode(code = "WFL_TASK_TYPE", joinKey = FIELD_TASK_TYPE)
    private String taskTypeName;

    private Long sequence;

    @Transient
    @Children
    private List<WflUserTask> userTask;

    @Transient
    @Children
    private List<WflTaskReceiver> receivers;

    @Transient
    @Children
    private List<WflTaskAction> actions;

    public WflTask(Map map) {
        this.setTaskId(Long.parseLong(map.get("element_id").toString()));
        this.setTaskCode(map.get("element_code").toString());
        this.setTaskName(map.get("element_name").toString());
    }
}
