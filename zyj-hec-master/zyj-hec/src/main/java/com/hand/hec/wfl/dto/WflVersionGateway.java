package com.hand.hec.wfl.dto;

/**
 * Auto Generated By Hap Code Generator
 **/

import java.util.HashMap;
import java.util.Map;

import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.hand.hap.core.annotation.Children;
import com.hand.hap.mybatis.common.query.Where;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.context.annotation.Lazy;

import com.hand.hap.core.annotation.MultiLanguage;
import com.hand.hap.core.annotation.MultiLanguageField;
import com.hand.hap.mybatis.annotation.ExtensionAttribute;
import com.hand.hap.mybatis.common.query.JoinCode;
import com.hand.hap.system.dto.BaseDTO;

import lombok.*;


@MultiLanguage
@ExtensionAttribute(disable = true)
@Table(name = "wfl_version_gateway")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@ToString
public class WflVersionGateway extends BaseDTO {

    public static final String FIELD_VERSION_GATEWAY_ID = "versionGatewayId";
    public static final String FIELD_GATEWAY_ID = "gatewayId";
    public static final String FIELD_VERSION = "version";
    public static final String FIELD_PROCESS_ID = "processId";
    public static final String FIELD_GATEWAY_CODE = "gatewayCode";
    public static final String FIELD_GATEWAY_NAME = "gatewayName";
    public static final String FIELD_GATEWAY_TYPE = "gatewayType";

    public static final String ELEMENT_GATEWAY = "GATEWAY";

    public static final String GATEWAY_TYPE_EXCLUSIVE = "EXCLUSIVE";
    public static final String GATEWAY_TYPE_PARALLEL = "PARALLEL";


    /**
     * 网关ID
     */
    @Id
    @GeneratedValue
    @Where
    private Long versionGatewayId;

    @Where
    private Long gatewayId;

    /**
     * 工作流版本
     */
    @Where
    private Long version;

    /**
     * 工作流ID
     */
    @Where
    private Long processId;

    /**
     * 流转代码
     */
    @NotEmpty
    @Length(max = 30)
    private String gatewayCode;

    /**
     * 网关名称
     */
    @Length(max = 240)
    @MultiLanguageField
    private String gatewayName;

    /**
     * 网关类型
     */
    @NotEmpty
    @Length(max = 30)
    private String gatewayType;

    @Transient
    @JoinCode(code = "WFL.GATEWAY_TYPE", joinKey = FIELD_GATEWAY_TYPE)
    private String gatewayTypeName;

    @Transient
    @Children
    private Map<String, WflVerGtwBizRuleGroup> gtwBizRuleGroupMap;

    public WflVerGtwBizRuleGroup getGtwBizRuleGroup(String key) {
        return gtwBizRuleGroupMap == null ? null : gtwBizRuleGroupMap.get(key);
    }

    public void addGtwBizRuleGroup(String key, WflVerGtwBizRuleGroup group) {
        if (gtwBizRuleGroupMap == null) {
            gtwBizRuleGroupMap = new HashMap<String, WflVerGtwBizRuleGroup>();
        }
        gtwBizRuleGroupMap.put(key, group);
    }

    public WflVersionGateway(Map map) {
        this.setGatewayId(Long.parseLong(map.get("element_id").toString()));
        this.setGatewayCode(map.get("element_code").toString());
        this.setGatewayName(map.get("element_name").toString());
    }

    public WflVersionGateway(WflGateway gateway) {
        this.gatewayId = gateway.getGatewayId();
        this.processId = gateway.getProcessId();
        this.gatewayCode = gateway.getGatewayCode();
        this.gatewayName = gateway.getGatewayName();
        this.gatewayType = gateway.getGatewayType();
    }
}
