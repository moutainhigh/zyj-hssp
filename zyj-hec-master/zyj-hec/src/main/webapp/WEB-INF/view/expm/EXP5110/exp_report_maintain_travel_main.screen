<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:c="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" xmlns:s="aurora.plugin.script" trace="true">
    <a:init-procedure>
        <a:model-query model="expm.EXP5110.exp_report_header_query" rootPath="header_info"/>
        <!-- 头费用对象的处理 -->
        <p:switch test="/parameter/@exp_report_header_id">
            <p:case value="null">
                <a:model-query fetchAll="true" model="expm.EXP5110.exp_report_header_object_fields_query" rootPath="default_objects"/>
                <a:model-join joinField="fixed_id" models="/model/header_info,/model/default_objects" shareField="display_field,return_field" valueField="dft_mo_expense_object_name,dft_mo_expense_object_id"/>
            </p:case>
            <p:case>
                <a:model-query fetchAll="true" model="expm.EXP5110.exp_report_header_object_query" rootPath="header_objects"/>
                <a:model-join joinField="exp_report_header_id" models="/model/header_info,/model/header_objects" shareField="display_field,return_field" valueField="mo_expense_object_name,mo_expense_object_id"/>
            </p:case>
        </p:switch>
        <p:echo/>
        <!-- 头费用对象的处理 -->
        <a:model-query model="expm.EXP5110.exp_mo_rep_type_ref_eles_query" rootPath="elements"/>
        <a:model-query model="expm.EXP5110.exp_report_header_dimension_fields_query" rootPath="header_dimension_fields"/>
        <a:model-query model="expm.EXP5110.exp_report_header_object_fields_query" rootPath="header_object_fields"/>
        <!--<a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_LINES&apos;" model="expm.EXP5110.exp_report_line_dimension_fields_query" rootPath="travel_line_dimensions"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_LINES&apos;" model="expm.EXP5110.exp_report_line_object_fields_query" rootPath="travel_line_objects"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_LINES&apos; " model="hec_util.exp_util.exp_rep_ele_invoice_flag" rootPath="travel_line_element"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;TRAVEL_LINES&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="travel_lines_description"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_STAY_LINES&apos;" model="expm.EXP5110.exp_report_line_dimension_fields_query" rootPath="travel_stay_line_dimensions"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_STAY_LINES&apos;" model="expm.EXP5110.exp_report_line_object_fields_query" rootPath="travel_stay_line_objects"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_STAY_LINES&apos; " model="hec_util.exp_util.exp_rep_ele_invoice_flag" rootPath="travel_stay_line_element"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;TRAVEL_STAY_LINES&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="travel_stay_lines_description"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_SUBSIDY_LINES&apos;" model="expm.EXP5110.exp_report_line_dimension_fields_query" rootPath="travel_subsidy_line_dimensions"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_SUBSIDY_LINES&apos;" model="expm.EXP5110.exp_report_line_object_fields_query" rootPath="travel_subsidy_line_objects"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TRAVEL_SUBSIDY_LINES&apos; " model="hec_util.exp_util.exp_rep_ele_invoice_flag" rootPath="travel_subsidy_line_element"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;TRAVEL_SUBSIDY_LINES&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="travel_subsidy_lines_description"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TICKET_UNIFIED&apos;" model="expm.EXP5110.exp_report_line_dimension_fields_query" rootPath="ticket_unified_line_dimensions"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TICKET_UNIFIED&apos;" model="expm.EXP5110.exp_report_line_object_fields_query" rootPath="ticket_unified_line_objects"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;TICKET_UNIFIED&apos; " model="hec_util.exp_util.exp_rep_ele_invoice_flag" rootPath="ticket_unified_line_element"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;TICKET_UNIFIED&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="ticket_unified_description"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;STANDARD&apos;" model="expm.EXP5110.exp_report_line_dimension_fields_query" rootPath="standard_line_dimensions"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;STANDARD&apos;" model="expm.EXP5110.exp_report_line_object_fields_query" rootPath="standard_line_objects"/>
        <a:model-query defaultWhereClause="v.report_page_element_code = &apos;STANDARD&apos; " model="hec_util.exp_util.exp_rep_ele_invoice_flag" rootPath="standard_line_element"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;STANDARD&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="standard_line_description"/>
        <a:model-query defaultWhereClause="erpe.report_page_element_code = &apos;STANDARD_PMT&apos;" model="expm.EXP5110.exp_report_line_description_query" rootPath="standard_pmt_line_description"/>-->
        <p:echo/>
        <s:server-script><![CDATA[
            importPackage(java.lang);
            importPackage(Packages.uncertain.composite);
            importPackage(Packages.aurora.service);
            importPackage(Packages.aurora.service.http);
            importPackage(Packages.aurora.presentation);
            importPackage(Packages.aurora.presentation.component);
            
            var viewPlace = CompositeUtil.findChild($config(), 'vBox', 'id', 'EXP5110_view_place');
            var elements = $ctx.model.getChild('elements').getData().getChilds();
            if (elements) {
                var eleIterator = elements.iterator();
                while (eleIterator.hasNext()) {
                    var element = eleIterator.next();
                    if (element.get('service_name')) {
                        var includeScreen = new CompositeMap('a', 'http://www.aurora-framework.org/application', 'screen-include');
                        var includeScreenData = includeScreen.getData();
                        includeScreenData.put('screen', element.get('service_name'));
                        viewPlace.addChild(includeScreen.getData());
                    }
                }
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:view>
        <a:link id="EXP5110_submit_exp_report_link" model="db.exp_report_pkg.submit_exp_report" modelaction="execute"/>
        <a:link id="EXP5110_exp_report_main_link" url="${/request/@context_path}/modules/expm/EXP5110/exp_report_main.screen"/>
        <a:link id="EXP5110_exp_report_maintain_create_from_req_link" url="${/request/@context_path}/modules/expm/EXP5110/exp_report_maintain_create_from_req.screen"/>
        <!--add by caoke/2018-04-24 从费用池创建-->
        <a:link id="EXP5110_exp_report_travel_create_from_expense_pools_link" url="${/request/@context_path}/modules/expm/EXP5110/exp_report_maintain_create_from_expense_pools.screen"/>
        <a:link id="EXP5110_uploadFile_link" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="EXP5110_document_history_view_link" url="${/request/@context_path}/modules/expm/public/exp_document_history_query.screen"/>
        <a:link id="EXP5110_exp_report_from_req_query_link" model="expm.EXP5110.exp_report_from_req_query" modelaction="query"/>
        <a:link id="EXP5110_get_policy_info_link" model="db.exp_mo_expense_policies_pkg.get_policy_info" modelaction="execute"/>
        <!--added by zealot at 20181121 工作流提交前预览-->
        <a:link id="EXP5110_workflow_preview_before_submit_link" url="${/request/@context_path}/modules/wfl/WFL1001/wfl_workflow_preview_before_submit.screen"/>
        <!--  <style><![CDATA[
        	.reqnumberlov{
			    color: #005a78;
    			text-decoration: none;
    			cursor:pointer;
        	}
        	
        	.reqnumberlov:hover{
        	    color: #ff9900;
    			text-decoration: none;   
        	}
        	
        	
        	.reqnumberlov input{
        		cursor:pointer;
        	}
        ]]></style> -->
        <style><![CDATA[
            #reporttravle_placeholder{
			    height:45px;
			}
        ]]></style>
        <script><![CDATA[
            var headerRecord;
            var submitFlag = false;
            var bgtIgnoreWarningFlag;
            var vatIgnoreAccEntityFlag;
            var vatIgnoreDateFlag;
            var closeable = false;
            
            function EXP5110_onMaintainReady() {
                headerRecord = $au('EXP5110_exp_report_header_ds').getAt(0);
            
                //增加按钮隐藏逻辑
                var exp_header_number = headerRecord.get('exp_report_number');
                //var saveDiv = Ext.get('saveExpTravelDiv');
            
                if (exp_header_number == undefined) {
            
                    //saveDiv.parent().setStyle('display', 'none');
                    document.getElementById("saveExpTravelDiv").style.display = "none";
                } else {
                    //saveDiv.parent().setStyle('display', 'table-cell');
                    document.getElementById("saveExpTravelDiv").style.display = "block";
                }
            
                $au('EXP5110_exp_report_header_ds')['on']('beforesubmit', EXP5110_headerBeforeSubmit);
            
                //对头上的申请单编号进行处理,申请单编号的输入框点击时，打开申请单的只读页面
                if ($A.CmpManager.get('EXP5110_expReqTravelNumberLov')) {
                    //如果存在申请单编号的lov，说明当前单据是头关联申请的，将对应的编辑器设置css，并设置点击事件
                    EXP5110_setExpReqNumberLink();
                }
            
                //对报销单页面的关闭事件进行拦截，如果当前存在数据未保存，则进行提示[Tagin/2017.12.06 先注释]
                // $au('exp_report_maintain_main_screen').on('beforeclose', function() {
                // if ($au('EXP5110_exp_report_header_ds').isModified()) {
                // if (window.closeable) {
                // return true;
                // } else {
                // Aurora.showConfirm('${l:PROMPT}', '有数据尚未保存，是否直接关闭?', function() {
                // window.closeable = true;
                // $au('exp_report_maintain_main_screen').close();
                // });
                // return false;
                // }
                // } else {
                // return true;
                // }
                // });
            }
            
            function EXP5110_setExpReqNumberLink() {
                var lovDom = Ext.get('EXP5110_expReqTravelNumberLov');
                lovDom['on']('click', function(evt) {
                    var headerRecord = $au('EXP5110_exp_report_header_ds').getAt(0);
                    var mo_exp_report_type_id = '${/model/header_info/record/@mo_exp_report_type_id}';
                    //Modify lcy 增加exp_requisition_header_id参数
                    var exp_requisition_header_id = headerRecord.get('exp_requisition_header_id');
                    var payment_currency_code = $au('EXP5110_exp_report_header_ds').getAt(0).get('payment_currency_code');
                    if (headerRecord.get('exp_requisition_header_id')) {
                        new Aurora.Window({
                            url: $au('EXP5110_exp_report_maintain_create_from_req_link').getUrl() + '?mo_exp_report_type_id=' + mo_exp_report_type_id + '&exp_requisition_header_id=' + exp_requisition_header_id + '&payment_currency_code=' + payment_currency_code,
                            id: 'EXP5110_exp_report_maintain_create_from_req_window',
                            title: '${l:EXP_REPORT_CREATE.FROMREQ}',
                            fullScreen: true
                        });
                    }
                });
            }
            
            function EXP5110_onPayCurrFocusFun() {
                var payCurrNameField = headerRecord.getField('payment_currency_name');
                payCurrNameField.setOptions('EXP5110_currency_ds');
            }
            
            function EXP5110_saveReport() {
                var headerDs = $au('EXP5110_exp_report_header_ds');
                if (!headerDs.isModified()) {
                    headerDs.data[0].dirty = true;
                }
                $au('EXP5110_exp_report_header_ds').submit();
            }
            
            function EXP5110_submitReport() {
                //报销单未保存首先执行保存
                if (!submitFlag) {
                    EXP5110_saveReport();
                    submitFlag = true;
                    return;
                }
                submitFlag = false;
                Aurora.request({
                    lockMessage: '${l:EXP_REPORT.SUBMITTING}',
                    url: $au('EXP5110_submit_exp_report_link').getUrl(),
                    para: {
                        exp_report_header_id: $au('EXP5110_exp_report_header_ds').getAt(0).get('exp_report_header_id'),
                        bgt_ignore_warning_flag: (typeof bgtIgnoreWarningFlag) == 'string' ? bgtIgnoreWarningFlag : 'N',
                        vat_ignore_acc_entity_flag: (typeof vatIgnoreAccEntityFlag) == 'string' ? vatIgnoreAccEntityFlag : 'N',
                        vat_ignore_date_flag: (typeof vatIgnoreDateFlag) == 'string' ? vatIgnoreDateFlag : 'N'
                    },
                    success: function(resp) {
                        if (resp && resp.result) {
                            if (resp.result.bgt_error_level_code) {
                                var errorLevelCode = resp.result.bgt_error_level_code;
                                var errorMessage = resp.result.bgt_error_message;
                                if (errorLevelCode == 'ALLOWED') {
                                    Aurora.showConfirm('${l:PROMPT}', errorMessage, function() {
                                        bgtIgnoreWarningFlag = 'Y';
                                        EXP5110_submitReport();
                                    }, null);
                                } else if (errorLevelCode == 'BLOCK') {
                                    Aurora.showWarningMessage('${l:PROMPT.WARN}', errorMessage, null);
                                }
                            } else if (resp.result.vat_other_acc_entity_code) {
                                var vatOtherAccEntityMsg = resp.result.vat_other_acc_entity_msg;
                                Aurora.showConfirm('${l:PROMPT}', vatOtherAccEntityMsg, function() {
                                    vatIgnoreAccEntityFlag = 'Y';
                                    EXP5110_submitReport();
                                }, null);
                            } else if (resp.result.vat_over_date_code) {
                                var vatOverDateMsg = resp.result.vat_over_date_msg;
                                Aurora.showConfirm('${l:PROMPT}', vatOverDateMsg, function() {
                                    vatIgnoreDateFlag = 'Y';
                                    EXP5110_submitReport();
                                }, null);
                            } else {
                                EXP5110_jumpMain();
                            }
                        }
                    }
                });
            }
            
            function EXP5110_onHeaderSubmitSuccess() {
                // $au('EXP5110_exp_report_header_ds').query();
                if (submitFlag) {
                    EXP5110_submitReport();
                    submitFlag = false;
                }
            
                var dsHeader = $au('EXP5110_exp_report_header_ds').getAt(0);
                if (dsHeader.get('exp_report_number') != undefined) {
                    //Ext.get('saveExpTravelDiv').parent().setStyle('display', 'table-cell');
                    document.getElementById("saveExpTravelDiv").style.display = "block";
                }
            }
            
            function EXP5110_jumpMain() {
                window.location.href = $au('EXP5110_exp_report_main_link').getUrl();
            }
            
            function EXP5110_headerBeforeSubmit() {
                var headerDs = $au('EXP5110_exp_report_header_ds');
                if (!headerDs.validate()) {
                    return false;
                } else {
                    var record = headerDs.getAll()[0];
                    var expObjDatas = [];
                    for (field in headerDs.fields) {
                        if (/^#/.test(field)) {
                            //id值
                            var expObjTypeId = field.replace(/^#/, '');
                            var idValue = record.get(field);
                            var nameValue = record.get('^' + field);
                            var expObjData = {
                                mo_exp_obj_type_id: expObjTypeId,
                                mo_expense_object_id: idValue,
                                mo_expense_object_name: nameValue
                            };
                            expObjDatas.push(expObjData);
                        }
                    }
                    record['data']['expense_object_lines'] = expObjDatas;
                }
            }
            
            function EXP5110_onReqNumberFocusFun() {
                $au('EXP5110_exp_report_header_ds').getAt(0).getField('exp_requisition_number').setLovPara('payment_currency_code', $au('EXP5110_exp_report_header_ds').getAt(0).get('payment_currency_code'));
            }
            
            function EXP5110_onHeaderUpdateFun(ds, record, name, value, oldValue) {
                //收款对象变化,清空收款方
                if (name == 'payee_category') {
                    record.set('payee_id', '');
                    record.set('payee_name', '');
                }
                //Modify lcy 从申请单创建标准行逻辑统一写到modules/expm/EXP5110/exp_report_from_req_header_lov.screen里面，此次逻辑重复，注释掉
                // else if (name == 'exp_requisition_header_id') {
                // Aurora.request({
                // url: $au('EXP5110_exp_report_from_req_query_link').getUrl(),
                // para: {
                // mo_exp_report_type_id: '${/model/header_info/record/@mo_exp_report_type_id}',
                // exp_requisition_header_id: value,
                // payment_currency_code: record.get('payment_currency_code')
                // },
                // success: function(resp) {
                // if (resp && resp.result && resp.result.record) {
                // var respDatas = resp.result.record.length ? resp.result.record : [resp.result.record];
                // Ext.each(respDatas, function(respData) {
                // //头关联时，无需在行上关联申请单行信息
                // respData['exp_requisition_header_id'] = '';
                // respData['exp_requisition_line_id'] = '';
                // respData['exp_requisition_dist_id'] = '';
                // //此处逻辑应与modules/expm/EXP5110/exp_report_maintain_create_from_req.screen中创建逻辑一致
                // if (respData['req_page_element_code'] == 'STANDARD' && typeof(EXP5110_standardLineAdd) == 'function') {
                // var reqData = [respData];
                // var fields = {};
                // for (fieldName in respData) {
                // fields[fieldName] = '';
                // }
                // reqData['fields'] = fields;
                // EXP5110_standardLineAdd(reqData);
                // }
                // });
                // }
                // }
                // });
                // }
            }
            
            //update by penglei 20171227 新增飞机舱位、火车座位政策校验
            
            function EXP5110_policySeatClassValidator(record, name, value) {
                //超政策之后不允许保存
                if (record.get('commit_flag') == 'N') {
                    if (name == 'seat_class_name') {
                        if (record.get('seat_class') < (record.get('seat_class') ? record.get('seat_class') : record.get('seat_class'))) {
                            return '${l:CURRENT_SPACE_SEATING_LIMITED}' + record.get('seat_class_desc') + '<br>' + '${l:WRONG_FIELD_IS}';
            
                        } else {
                            record.getMeta().getField('standard_reason_name').setReadOnly(true);
                            record.getMeta().getField('standard_reason_name').setRequired(false);
                        }
            
                    }
                }
                return true;
            }
            
            //Modified lcy 2018/5/9 12:31:12 翻译多语言，报错信息换行显示
            
            function EXP5110_policyValidator(record, name, value) {
                //Modified lcy 2018/6/6 11:10:12 非调整类报销单不允许输入负数单价
                var adjustment_flag = '${/model/header_info/record/@adjustment_flag}';
                var business_price = record.get('business_price');
                if (adjustment_flag == 'N' && business_price < 0) {
                    return '${l:EXP_REPORT_HEADER.ADJUSTMENT_REPORT_CHECK}';
                }
                //超政策之后不允许保存
                if (record.get('commit_flag') == 'N') {
                    if (name == 'business_price') {
                        if (record.get('management_price') < (record.get('lower_limit') ? record.get('lower_limit') : record.get('management_price'))) {
                            return '${l:CURRENT_BUSINESS_PRICE_LOWER_LIMIT_VALUE}' + record.get('management_currency_name') + record.get('lower_limit') + '<br>' + '${l:WRONG_FIELD_IS}';
                        } else if (record.get('management_price') > (record.get('upper_limit') ? record.get('upper_limit') : record.get('management_price'))) {
                            return '${l:CURRENT_BUSINESS_PRICE_UPPER_LIMIT_VALUE}' + record.get('management_currency_name') + record.get('upper_limit') + '<br>' + '${l:WRONG_FIELD_IS}';
                        }
                    }
                }
                return true;
            }
            
            function EXP5110_pay2funExchangeRateValidator(record, name, value) {
                //外币支付必须存在对头核算主体本位币的汇率
                if (!value) {
                    var payment_currency_name = record.get('payment_currency_name');
                    return "${l:PAY2FUN_EXCHANGE_RATE_NOT_FOUND}" + payment_currency_name;
                }
                return true;
            }
            
            function EXP5110_pay2magExchangeRateValidator(record, name, value) {
                //外币支付必须存在对管理组织本位币的汇率
                if (!value) {
                    var payment_currency_name = record.get('payment_currency_name');
                    return "${l:PAY2MAG_EXCHANGE_RATE_NOT_FOUND}" + payment_currency_name;
                }
                return true;
            }
            
            function EXP5110_onLinePolicyInit(record, name) {
                //动态获取行费用数据,在行数据更新、新增的时候触发。
                var headerRecord = $au('EXP5110_exp_report_header_ds').getAt(0);
                Aurora.request({
                    url: $au('EXP5110_get_policy_info_link').getUrl(),
                    para: {
                        company_id: record.get('company_id'),
                        employee_id: record.get('employee_id'),
                        acc_entity_id: record.get('acc_entity_id'),
                        place_id: record.get('place_id'),
                        place_type_id: record.get('place_type_id'),
                        position_id: record.get('position_id'),
                        unit_id: record.get('unit_id'),
                        vehicle_code: record.get('transportation'),
                        report_date: headerRecord.get('report_date'),
                        doc_category: 'EXP_REP',
                        doc_type_id: headerRecord.get('mo_exp_report_type_id'),
                        mo_expense_type_id: record.get('mo_expense_type_id'),
                        mo_expense_item_id: record.get('mo_expense_item_id')
                    },
                    success: function(resp) {
                        if (resp && resp.result) {
                            var policyData = resp.result;
                            if (policyData.count == 1) {
                                //需要进行数学运算的时候需要使用hecUtil中的函数
                                var hecUtil = new HecUtil();
                                //默认标志为Y
                                if (policyData.default_flag == 'Y') {
                                    //当行为新增，且默认标志位Y的时候，则自动带出金额
                                    if (record.isNew) {
                                        //获取费用标准
                                        var expenseStandard = policyData.expense_standard;
                                        //自动倒算当前业务币种对应的金额，计算方式为：
                                        //管理币种金额  * (1 / (付款币种 -》 管理币种汇率)) =》 付款币种金额
                                        //付款币种金额  * (1 / (业务币种 -》 付款币种汇率)) =》 业务币种金额
                                        var paymentExpenseStandard = hecUtil.calExchangeAmount(expenseStandard, 1 / record.get('pay2mag_exchange_rate'), record.get('payment_currency_precision'));
                                        var businessExpenseStandard = hecUtil.calExchangeAmount(paymentExpenseStandard, 1 / record.get('biz2pay_exchange_rate'), record.get('business_currency_precision'));
                                        //设置金额
                                        record.set('business_price', businessExpenseStandard);
                                    }
                                    //当默认标志位Y,且舱位有正常值的时候，用标准带出交通工具和舱位
                                    if (policyData.seat_class != '' && policyData.seat_class != null && policyData.seat_class != 'undefined') {
                                        if (name != 'transportation_name' && name != 'transportation') {
                                            record.set('transportation', policyData.transportation);
                                            record.set('transportation_name', policyData.transportation_desc);
                                        }
                                        record.set('seat_class', policyData.seat_class);
                                        record.set('seat_class_name', policyData.seat_class_desc);
                                    }
                                }
                                //获取到正常的费用数据，则设置管理币种的标准、上下限信息、是否可修改、是否可提交信息。
                                record.set('upper_limit', policyData.upper_limit);
                                record.set('lower_limit', policyData.lower_limit);
                                record.set('expense_standard', policyData.expense_standard);
                                record.set('changeable_flag', policyData.changeable_flag);
                                record.set('commit_flag', policyData.commit_flag);
                            } else {
                                //没有获取到正常的费用数据则清空数据
                                record.set('upper_limit', '');
                                record.set('lower_limit', '');
                                record.set('expense_standard', '');
                                record.set('changeable_flag', '');
                                record.set('commit_flag', '');
                                if (name != 'transportation') {
                                    record.set('transportation', '');
                                    record.set('transportation_name', '');
                                }
                                record.set('seat_class', '');
                                record.set('seat_class_name', '');
                            }
                        }
                    }
                });
            }
            
            function EXP5110_return() {
                if (Aurora.CmpManager.get('exp_report_maintain_main_screen')) {
                    $au('exp_report_maintain_main_screen').close();
                }
            }
            
            function EXP5100_onFocus() {
                var record = $au('EXP5110_exp_report_header_ds').getCurrentRecord();
                var payee_category = record.get('payee_category');
                if (payee_category != null && payee_category != '') {
                    var acc_entity_id = record.get('acc_entity_id');
                    record.getField('payee_name').setLovPara('payee_category', payee_category);
                    record.getField('payee_name').setLovPara('acc_entity_id', acc_entity_id);
                } else {
                    new Aurora.showMessage('${l:PROMPT}', '${l:PLEASE_SELECT_BENEFICIARY}');
                }
            }
            
            function EXP5110_deleteReport() {
                Aurora.showConfirm('${l:EXIT_SYSTEM}', '${l:EXP5110_REPORT_DELETE}', function(resp) {
                    Aurora.request({
                        url: $au('EXP5110_exp_report_deleteHeader_link').getUrl(),
                        para: {
                            'exp_report_header_id': $au('EXP5110_exp_report_header_ds').getAt(0).get('exp_report_header_id')
                        },
                        success: function() {
                            EXP5110_return();
                            EXP5110_query();
                        },
                        scope: this
                    });
                    resp.close();
                });
            }
            
            function EXP5110_attachment() {
                var record = $au('EXP5110_exp_report_header_ds').getAt(0);
                new Aurora.Window({
                    url: $au('EXP5110_uploadFile_link').getUrl() + '?table_name=EXP_REPORT_HEADERS&header_id=' + record.get('exp_report_header_id'),
                    title: '${l:ATM.UPLOAD_ATTACHMENT}',
                    id: 'check_upload_file_screen',
                    width: 600,
                    height: 400
                });
            }
            
            function EXP5110_trackReport() {
                var record = $au('EXP5110_exp_report_header_ds').getAt(0);
                new Aurora.Window({
                    url: $au('EXP5110_document_history_view_link').getUrl() + '?document_type=EXP_REPORT&document_id=' + record.get('exp_report_header_id'),
                    id: 'CSH5010_document_history_view_window',
                    side: 'right',
                    width: 1020
                });
            }
            
            function EXP5110_getInvoiceType(invoiceCode) {
                /**
                 * @Author: xuzhao
                 * @Email: mailto:zhao.xu@hand-china.com
                 * @Description: 判断发票类型
                 * @Time: 2017/10/17 15:32
                 * @param a 发票代码
                 * @Return: 发票类型号
                 */
                /**
                 *10:电子普票
                 *11:卷式发票
                 *01:专票
                 *03:机动车发票
                 *04:普票
                 */
                if (invoiceCode) {
            
                    var a = invoiceCode;
                    var b;
                    var c = "99";
                    if (a.length == 12) {
                        b = a.substring(7, 8);
                        if (c == "99") { //增加判断，判断是否为新版电子票
                            if (a.charAt(0) == '0' && a.substring(10, 12) == '11') {
                                c = "10";
                            }
                            if (a.charAt(0) == '0' && (a.substring(10, 12) == '06' || a.substring(10, 12) == '07')) { //判断是否为卷式发票  第1位为0且第11-12位为06或07
                                c = "11";
                            }
                        }
                        if (c == "99") { //如果还是99，且第8位是2，则是机动车发票
                            if (b == 2 && a.charAt(0) != '0') {
                                c = "03";
                            }
                        }
                    } else if (a.length == 10) {
                        b = a.substring(7, 8);
                        if (b == 1 || b == 5) {
                            c = "01";
                        } else if (b == 6 || b == 3) {
                            c = "04";
                        } else if (b == 7 || b == 2) {
                            c = "02";
                        }
                    }
            
                    if (c == '01') {
                        return 'VAT_SPECIAL';
                    } else if (c == '04') {
                        return 'VAT_NORMAL';
                    } else if (c == '10') {
                        return 'VAT_ELETRONIC_NORMAL';
                    } else if (c == '11' || c == '03' || c == '02') {
                        return 'OTHER';
                    } else {
                        return 'OTHER';
                    }
                }
            }
            //add by caoke/2018-04-24 从费用池创建
            
            function EXP5110_travelCreateFromExpensePools() {
                var headerRecord = $au('EXP5110_exp_report_header_ds').getAt(0);
                var exp_requisition_header_id = headerRecord.get('exp_requisition_header_id');
                if (!exp_requisition_header_id) {
                    exp_requisition_header_id = '';
                }
                new Aurora.Window({
                    url: $au('EXP5110_exp_report_travel_create_from_expense_pools_link').getUrl() + '?mo_exp_report_type_id=${/model/header_info/record/@mo_exp_report_type_id}&payment_currency_code=' + $au('EXP5110_exp_report_header_ds').getAt(0).get('payment_currency_code') + '&exp_requisition_header_id=' + exp_requisition_header_id,
                    id: 'EXP5110_exp_report_create_from_expense_pools_window',
                    title: '${l:EXP_REPORT_CREATE.FROM_EXPENSE_POOLS}',
                    fullScreen: true
                });
            }
            
            //added by zealot at 20181121 单据提交前工作流预览
            
            function EXP5110_wflPreview() {
                var headerRecord = $au('EXP5110_exp_report_header_ds').getAt(0);
                var transaction_type_id = headerRecord.get('mo_exp_report_type_id');
                var company_id = headerRecord.get('company_id');
                var instance_param = headerRecord.get('exp_report_header_id');
                if (instance_param) {
                    new Aurora.Window({
                        url: $au('EXP5110_workflow_preview_before_submit_link').getUrl() + '?transaction_category=EXP_REPORT&transaction_type_id=' + transaction_type_id + '&company_id=' + company_id + '&instance_param=' + instance_param,
                        id: 'EXP5110_workflow_preview_before_submit_window',
                        title: '${l:WFL.PREVIEW}',
                        fullScreen: true
                    });
                } else {}
            }
            
            function EXP5110_calHeadAmount(lineDs, lineTotalAmount) {
                for (var i = 0;i < lineDs.getAll().length;i++) {
                    var business_amount = lineDs.getAt(i).get('business_amount');
                    if (!business_amount) {
                        business_amount = 0;
                    }
                    lineTotalAmount = plus(business_amount, lineTotalAmount);
                }
                return lineTotalAmount;
            }
            //add by caoke/2018-06-01 重新计算头上总金额
            
            function EXP5110_onHeadAmountChanged() {
                var lineTotalAmount = 0;
                for (i = 0;i < $au('EXP5110_report_page_element_ds').getAll().length;i++) {
                    var line_ds = $au('EXP5110_report_page_element_ds').getAt(i).get('line_ds');
                    if (line_ds) {
                        lineTotalAmount = EXP5110_calHeadAmount($au(line_ds), lineTotalAmount);
                    }
                }
                $au('EXP5110_exp_report_header_ds').getAt(0).set('rep_total_amount', lineTotalAmount);
            }
            Aurora.onReady(EXP5110_onMaintainReady);
        ]]></script>
        <a:dataSets>
            <a:dataSet id="EXP5110_paymentObject_ds" loadData="true" lookupCode="PAYMENT_OBJECT"/>
            <a:dataSet id="EXP5110_currency_ds" loadData="true" model="hec_util.gld_currency_vl_lov"/>
            <a:dataSet id="EXP5110_report_page_element_ds">
                <a:datas dataSource="/model/elements"/>
            </a:dataSet>
            <a:dataSet id="EXP5110_exp_report_header_ds" submitUrl="${/request/@context_path}/modules/expm/EXP5110/exp_report_maintain_save.svc">
                <a:datas dataSource="/model/header_info"/>
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                    <a:field name="employee_name" prompt="EXP_REPORT_HEADERS.EMPLOYEE_NAME" readOnly="true" required="true"/>
                    <a:field name="employee_id"/>
                    <a:field name="payee_id"/>
                    <a:field name="payee_name" lovHeight="300" lovService="hec_util.gld_payee_v_lov" lovWidth="450" prompt="CSH_PAYMENT_REQUISITION_HDS.PARTNER_ID" required="true" title="CSH_PAYMENT_REQUISITION_HDS.PARTNER_ID">
                        <a:mapping>
                            <a:map from="payee_name" to="payee_name"/>
                            <a:map from="payee_id" to="payee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payee_category"/>
                    <a:field name="payee_category_name" displayField="code_value_name" options="EXP5110_paymentObject_ds" prompt="CSH_PAYMENT_REQUISITION_HDS.PARTNER_CATEGORY" required="true" returnField="payee_category" valueField="code_value"/>
                    <a:field name="exp_report_number" prompt="EXP_REPORT_HEADERS.EXP_REPORT_NUMBER" readOnly="true"/>
                    <a:field name="mo_exp_report_type_name" prompt="EXP_MO_EXP_POLICY_ASSIGN.DOC_TYPE" readOnly="true" required="true"/>
                    <a:field name="mo_exp_report_type_id"/>
                    <a:field name="report_date" prompt="EXP_REQUISITION_HEADERS.REQUISITION_DATE" required="true"/>
                    <a:field name="created_by_name" prompt="EXP_REPORT_HEADERS.CREATED_BY_NAME" readOnly="true" required="true"/>
                    <a:field name="payment_currency_name" displayField="currency_name" prompt="EXP_REPORT_HEADERS.PAYMENT_CURRENCY_NAME" readOnly="true" required="true" returnField="payment_currency_code" valueField="currency_code"/>
                    <a:field name="payment_currency_code"/>
                    <a:field name="rep_total_amount" prompt="EXP_REPORT_HEADERS.SUM_AMOUNT" readOnly="true"/>
                    <a:field name="unit_id"/>
                    <a:field name="unit_name" lovService="hec_util.exp_util.exp_org_unit_limit_emp_com_lov?employee_id=${/parameter/@employee_id}" prompt="EXP_REPORT_HEADERS.UNIT_ID" required="true" title="EXP_REPORT_HEADERS.UNIT_ID">
                        <a:mapping>
                            <a:map from="unit_id" to="unit_id"/>
                            <a:map from="unit_name" to="unit_name"/>
                            <a:map from="position_id" to="position_id"/>
                            <a:map from="default_bgt_entity_id" to="bgt_entity_id"/>
                            <a:map from="default_bgt_center_id" to="bgt_center_id"/>
                            <a:map from="default_resp_center_id" to="resp_center_id"/>
                            <a:map from="default_acc_entity_id" to="acc_entity_id"/>
                            <a:map from="default_acc_entity_name" to="acc_entity_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="position_name" prompt="EXP_REPORT_HEADERS.POSITION_NAME"/>
                    <a:field name="pay2fun_exch_type_name" prompt="EXP_REPORT_HEADERS.PAY2FUN_EXCH_RATE_NAME"/>
                    <a:field name="pay2fun_exch_type"/>
                    <a:field name="pay2fun_exch_rate" prompt="EXP_REPORT_HEADERS.PAY2FUN_EXCH_RATE" validator="EXP5110_pay2funExchangeRateValidator"/>
                    <a:field name="pay2mag_exch_type_name" prompt="EXP_REPORT_HEADERS.PAY2MAG_EXCH_RATE_NAME"/>
                    <a:field name="pay2mag_exch_type"/>
                    <a:field name="pay2mag_exch_rate" prompt="EXP_REPORT_HEADERS.PAY2MAG_EXCH_RATE" validator="EXP5110_pay2magExchangeRateValidator"/>
                    <a:field name="report_status_name" prompt="EXP_REPORT_HEADERS.REPORT_STATUS_NAME" readOnly="true" required="true"/>
                    <a:field name="attachment_num" prompt="EXP_REPORT_HEADERS.ATTACHMENT_NUM"/>
                    <a:field name="description" prompt="EXP_REPORT_HEADERS.DESCRIPTION"/>
                    <a:field name="acc_entity_id"/>
                    <a:field name="acc_entity_name" prompt="CSH_PAYMENT_REQUISITION_HDS.ACC_ENTITY_NAME" readOnly="true"/>
                    <a:field name="acc_center_id"/>
                    <a:field name="acc_center_name"/>
                    <a:field name="bgt_entity_id"/>
                    <a:field name="bgt_entity_name"/>
                    <a:field name="bgt_center_id"/>
                    <a:field name="bgt_center_name"/>
                    <a:field name="period_name"/>
                    <a:field name="payment_method_id"/>
                    <a:field name="payment_method_name"/>
                    <a:field name="vat_invoice_flag" checkedValue="Y" defaultValue="Y" prompt="ACP_INVOICE_HEADERS.INVOICE_NEWS" uncheckedValue="N"/>
                    <a:placeHolder id="EXP5110_expReqField"/>
                    <a:placeHolder id="EXP5110_headerDimensionFields"/>
                    <a:placeHolder id="EXP5110_headerObjectFields"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="EXP5110_onHeaderUpdateFun"/>
                    <!-- 报销单保存完毕后，进入提交逻辑，通过判断submitFlag标志，确定是否进行提交 -->
                    <a:event name="submitsuccess" handler="EXP5110_onHeaderSubmitSuccess"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <!--add by chao.dai 2019-01-17 将报销单的按钮上移，防止滑动滚动条时按钮跟随滑动-->
        <a:screenTopToolbar style="position:fixed;left:1px;right:1px;height:34px;z-index:100;border-bottom:1px solid #C7C7C7;background-color:#FFFFFF;padding-left: 10px;">
            <div class="clearfix" style="width:100%;height:100%;">
                <a:button click="EXP5110_return" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_BACK"/>
                <div id="saveExpTravelDiv">
                    <a:button id="EXP5110_wflPreviewBtn" click="EXP5110_wflPreview" style="margin-top:8px;margin-right:10px;float:right;" text="WFL.PREVIEW"/>
                    <a:button id="EXP5110_submitBtn" click="EXP5110_manualSubmitReport" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_SUBMIT_APPROVAL"/>
                    <a:button id="EXP5110_trackBtn" click="EXP5110_trackReport" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_TRACKING_DOCUMENTS"/>
                    <a:button id="EXP5110_attachmentBtn" click="EXP5110_attachment" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_ATTACHMENT_DOCUMENTATION"/>
                </div>
                <a:button id="EXP5110_saveBtn" click="EXP5110_manualSaveReport" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_SAVE_DRAFT"/>
                <a:button id="EXP5110_deleteBtn" click="EXP5110_deleteReport" style="margin-top:8px;margin-right:10px;float:right;" text="HAP_DELETE_DRAFT"/>
                <a:button id="EXP5110_createFromExpensePoolsBtn" click="EXP5110_standardCreateFromExpensePools" style="margin-top:8px;margin-right:10px;float:right;" text="EXP_REPORT_CREATE.FROM_EXPENSE_POOLS"/>
                <span style="margin-top:15px;margin-left：5px;font-size:1.05em;display:block;font-weight: 600;"><![CDATA[${/model/header_info/record/@mo_exp_report_type_name} ]]></span>
            </div>
        </a:screenTopToolbar>
        <div id="reporttravle_placeholder"/>
        <a:screenBody>
            <a:form column="1" marginWidth="15" title=" ">
                <a:box column="4" style="width:100%;">
                    <a:textField name="exp_report_number" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="mo_exp_report_type_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="employee_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:datePicker name="report_date" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:lov name="unit_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="acc_entity_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="created_by_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="report_status_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:numberField name="attachment_num" allowDecimals="1" allowNegative="false" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:textField name="payment_currency_name" bindTarget="EXP5110_exp_report_header_ds"/>
                    <a:numberField name="rep_total_amount" bindTarget="EXP5110_exp_report_header_ds"/>
                    <!-- <a:comboBox name="payee_category_name" bindTarget="EXP5110_exp_report_header_ds"/>-->
                    <a:lov name="payee_name" bindTarget="EXP5110_exp_report_header_ds">
                        <a:events>
                            <a:event name="focus" handler="EXP5100_onFocus"/>
                        </a:events>
                    </a:lov>
                    <a:placeHolder id="EXP5110_vatInvoiceFlagEditor"/>
                    <a:placeHolder id="EXP5110_expReqEditor"/>
                    <a:placeHolder id="EXP5110_headerDimensionEditors"/>
                    <a:placeHolder id="EXP5110_headerObjectEditors"/>
                </a:box>
                <a:box style="width:100%;margin-top:-5px;">
                    <a:textArea name="description" bindTarget="EXP5110_exp_report_header_ds" calcWidth="calc((100%  + 90px) / 4 * 3 + 150px)" width="800"/>
                </a:box>
            </a:form>
            <a:vBox id="EXP5110_view_place" padding="0" showMargin="false" style=""/>
        </a:screenBody>
    </a:view>
    <a:view-config>
        <c:create-config targetId="EXP5110_expReqField">
            <p:switch test="/model/header_info/record/@relation_method_code">
                <p:case value="HEAD">
                    <c:process-config>
                        <a:field name="exp_requisition_number" lovUrl="${/request/@context_path}/modules/expm/EXP5110/exp_report_from_req_header_lov.screen?mo_exp_report_type_id=${/model/header_info/record/@mo_exp_report_type_id}" lovWidth="880" prompt="PUR_PURCHASE_ORDER_TYPES.REQUISITION_FLAG" required="${/model/header_info/record/@req_required}" title="REQUISITION_ENQUIRY">
                            <a:mapping>
                                <a:map from="exp_requisition_number" to="exp_requisition_number"/>
                                <a:map from="exp_requisition_header_id" to="exp_requisition_header_id"/>
                            </a:mapping>
                        </a:field>
                        <a:field name="exp_requisition_header_id"/>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
        <c:create-config targetId="EXP5110_expReqEditor">
            <p:switch test="/model/header_info/record/@relation_method_code">
                <p:case value="HEAD">
                    <c:process-config>
                        <a:lov name="exp_requisition_number" id="EXP5110_expReqTravelNumberLov" bindTarget="EXP5110_exp_report_header_ds" className="reqnumberlov">
                            <a:events>
                                <a:event name="focus" handler="EXP5110_onReqNumberFocusFun"/>
                            </a:events>
                        </a:lov>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
        <c:create-config targetId="EXP5110_headerDimensionFields">
            <p:loop source="/model/header_dimension_fields">
                <c:process-config>
                    <a:field name="${@display_field}" defaultValue="${@default_dim_value_name}" lovService="hec_util.fnd_dimension_values_vl_lov?dimension_id=${@dimension_id}" prompt="${@dimension_name}" required="true" title="${@dimension_name}">
                        <a:mapping>
                            <a:map from="dimension_value_name" to="${@display_field}"/>
                            <a:map from="dimension_value_id" to="${@return_field}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@return_field}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="EXP5110_headerDimensionEditors">
            <p:loop source="/model/header_dimension_fields">
                <c:process-config>
                    <a:lov name="${@display_field}" bindTarget="EXP5110_exp_report_header_ds"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="EXP5110_headerObjectFields">
            <p:loop source="/model/header_object_fields">
                <c:process-config>
                    <a:field name="${@display_field}" defaultValue="${@dft_mo_expense_object_name}" lovService="hec_util.exp_mo_expense_object_value_vl_lov?mo_exp_obj_type_id=${@mo_exp_obj_type_id}" prompt="${@mo_exp_obj_type_name}" required="${@required_flag}" title="${@mo_exp_obj_type_name}">
                        <a:mapping>
                            <a:map from="name" to="${@display_field}"/>
                            <a:map from="id" to="${@return_field}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@return_field}" defaultValue="${@dft_mo_expense_object_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="EXP5110_headerObjectEditors">
            <p:loop source="/model/header_object_fields">
                <p:switch test="@expense_object_method">
                    <p:case value="DESC_TEXT">
                        <c:process-config>
                            <a:textField name="${@display_field}" bindTarget="EXP5110_exp_report_header_ds"/>
                        </c:process-config>
                    </p:case>
                    <p:case>
                        <c:process-config>
                            <a:lov name="${@display_field}" bindTarget="EXP5110_exp_report_header_ds"/>
                        </c:process-config>
                    </p:case>
                </p:switch>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="EXP5110_vatInvoiceFlagEditor">
            <p:switch test="/model/header_info/record/@taxpayer_type">
                <p:case value="GENERAL_TAXPAYER">
                    <c:process-config>
                        <a:checkBox name="vat_invoice_flag" bindTarget="EXP5110_exp_report_header_ds"/>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
    </a:view-config>
</a:screen>
