<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.hec.acp.mapper.AcpRequisitionHdMapper">
    <resultMap id="BaseResultMap" type="com.hand.hec.acp.dto.AcpRequisitionHd">
        <result column="REQUISITION_HDS_ID" property="requisitionHdsId" jdbcType="DECIMAL"/>
        <result column="REQUISITION_NUMBER" property="requisitionNumber" jdbcType="VARCHAR"/>
        <result column="COMPANY_ID" property="companyId" jdbcType="DECIMAL"/>
        <result column="COMPANY_NAME" property="companyName" jdbcType="VARCHAR"/>
        <result column="UNIT_ID" property="unitId" jdbcType="DECIMAL"/>
        <result column="UNIT_NAME" property="unitName" jdbcType="VARCHAR"/>
        <result column="POSITION_ID" property="positionId" jdbcType="DECIMAL"/>
        <result column="POSITION_NAME" property="positionName" jdbcType="VARCHAR"/>
        <result column="EMPLOYEE_ID" property="employeeId" jdbcType="DECIMAL"/>
        <result column="EMPLOYEE_NAME" property="employeeName" jdbcType="VARCHAR"/>
        <result column="ACC_ENTITY_ID" property="accEntityId" jdbcType="DECIMAL"/>
        <result column="ACC_ENTITY_NAME" property="accEntityName" jdbcType="DECIMAL"/>
        <result column="REQUISITION_DATE" property="requisitionDate" jdbcType="DATE"/>
        <result column="REQUISITION_DATE_TZ" property="requisitionDateTz" jdbcType="DATE"/>
        <result column="REQUISITION_DATE_LTZ" property="requisitionDateLtz" jdbcType="DATE"/>
        <result column="MO_PAY_REQ_TYPE_ID" property="moPayReqTypeId" jdbcType="DECIMAL"/>
        <result column="MO_PAY_REQ_TYPE_NAME" property="moPayReqTypeName" jdbcType="VARCHAR"/>
        <result column="TRANSACTION_CATEGORY" property="transactionCategory" jdbcType="VARCHAR"/>
        <result column="PAYMENT_METHOD_ID" property="paymentMethodId" jdbcType="DECIMAL"/>
        <result column="PAYMENT_METHOD_NAME" property="paymentMethodName" jdbcType="VARCHAR"/>
        <result column="PAYMENT_USEDE_ID" property="paymentUsedeId" jdbcType="DECIMAL"/>
        <result column="PAYMENT_USEDE_NAME" property="paymentUsedeName" jdbcType="VARCHAR"/>
        <result column="PAYEE_CATEGORY" property="payeeCategory" jdbcType="VARCHAR"/>
        <result column="PAYEE_CATEGORY_NAME" property="payeeCategoryName" jdbcType="VARCHAR"/>
        <result column="PAYEE_ID" property="payeeId" jdbcType="DECIMAL"/>
        <result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR"/>
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL"/>
        <result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="CURRENCY_NAME" property="currencyName" jdbcType="VARCHAR"/>
        <result column="CURRENCY_SYMBOL" property="currencySymbol" jdbcType="VARCHAR"/>
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="APPROVAL_DATE" property="approvalDate" jdbcType="DATE"/>
        <result column="APPROVAL_DATE_TZ" property="approvalDateTz" jdbcType="DATE"/>
        <result column="APPROVAL_DATE_LTZ" property="approvalDateLtz" jdbcType="DATE"/>
        <result column="APPROVED_BY" property="approvedBy" jdbcType="DECIMAL"/>
        <result column="CLOSED_DATE" property="closedDate" jdbcType="DATE"/>
        <result column="CLOSED_DATE_TZ" property="closedDateTz" jdbcType="DATE"/>
        <result column="CLOSED_DATE_LTZ" property="closedDateLtz" jdbcType="DATE"/>
        <result column="JE_CREATION_STATUS" property="jeCreationStatus" jdbcType="VARCHAR"/>
        <result column="AUDIT_FLAG" property="auditFlag" jdbcType="VARCHAR"/>
        <result column="AUDIT_DATE" property="auditDate" jdbcType="DATE"/>
        <result column="AUDIT_DATE_TZ" property="auditDateTz" jdbcType="DATE"/>
        <result column="AUDIT_DATE_LTZ" property="auditDateLtz" jdbcType="DATE"/>
        <result column="REVERSED_FLAG" property="reversedFlag" jdbcType="VARCHAR"/>
        <result column="SOURCE_TYPE" property="sourceType" jdbcType="VARCHAR"/>
        <result column="SOURCE_HEADER_ID" property="sourceHeaderId" jdbcType="DECIMAL"/>
        <result column="DOC_STATUS" property="docStatus" jdbcType="VARCHAR"/>
        <result column="TOTAL_AMOUNT" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="STATUS_NAME" property="statusName" jdbcType="VARCHAR"/>
        <result column="CREATED_BY_NAME" property="createdByName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="PAYMENT_TYPE" property="paymentType" jdbcType="VARCHAR"/>
        <result column="PROGRESS_STATUS" property="progressStatus" jdbcType="VARCHAR"/>
        <result column="PROGRESS_STATUS_NAME" property="progressStatusName" jdbcType="VARCHAR"/>
        <result column="PAID_AMOUNT" property="paidAmount" jdbcType="DECIMAL"/>
        <result column="PAYMENT_AMOUNT" property="paymentAmount" jdbcType="DECIMAL"/>
        <result column="PAYMENT_CURRENCY_NAME" property="paymentCurrencyName" jdbcType="VARCHAR"/>
        <result column="PAYMENT_CURRENCY_CODE" property="paymentCurrencyCode" jdbcType="VARCHAR"/>
        <result column="MAG_ORG_ID" property="magOrgId" jdbcType="DECIMAL"/>
        <result column="SET_OF_BOOKS_ID" property="setOfBooksId" jdbcType="DECIMAL"/>
        <result column="FUNCTIONAL_CURRENCY_CODE" property="functionalCurrencyCode" jdbcType="VARCHAR"/>
        <result column="RESP_CENTER_ID" property="respCenterId" jdbcType="DECIMAL"/>
        <result column="ACCOUNT_NUMBER" property="accountNumber" jdbcType="VARCHAR"/>
        <result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR"/>
        <result column="REQUISITION_STATUS_NAME" property="requisitionStatusName" jdbcType="VARCHAR"/>
        <result column="ALREADY_PAYING" property="alreadyPaying" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="query_include">
        SELECT
            h.REQUISITION_HDS_ID,
            h.REQUISITION_NUMBER,
            h.COMPANY_ID,
            ( SELECT fcl.COMPANY_SHORT_NAME FROM fnd_company_tl fcl WHERE fcl.company_id = h.company_id AND fcl.lang = #{request.locale,jdbcType=VARCHAR} ) AS company_name,
            h.POSITION_ID,
            ( SELECT pt.DESCRIPTION FROM exp_org_position_tl pt WHERE pt.POSITION_ID = h.POSITION_ID AND pt.lang = #{request.locale,jdbcType=VARCHAR} ) AS position_name,
             h.UNIT_ID,
            ( SELECT ut.description FROM exp_org_unit_tl ut WHERE ut.unit_id = h.unit_id AND ut.lang = #{request.locale,jdbcType=VARCHAR} ) AS unit_name,
            h.EMPLOYEE_ID,
            ( SELECT NAME FROM exp_employee ee WHERE ee.employee_id = h.employee_id ) AS employee_name,
            h.ACC_ENTITY_ID,
            ( SELECT et.ACC_ENTITY_NAME FROM gld_accounting_entity_tl et WHERE et.ACC_ENTITY_ID = h.ACC_ENTITY_ID AND et.lang = #{request.locale,jdbcType=VARCHAR} ) AS acc_entity_name,
            h.REQUISITION_DATE,
            h.REQUISITION_DATE_TZ,
            h.REQUISITION_DATE_LTZ,
            h.MO_PAY_REQ_TYPE_ID,
            ( SELECT al.DESCRIPTION FROM acp_mo_pay_req_type_tl al WHERE al.MO_PAY_REQ_TYPE_ID = h.MO_PAY_REQ_TYPE_ID AND al.lang = #{request.locale,jdbcType=VARCHAR} ) MO_PAY_REQ_TYPE_NAME,
            h.TRANSACTION_CATEGORY,
            h.PAYMENT_METHOD_ID,
            ( SELECT cl.DESCRIPTION FROM csh_payment_method_tl cl WHERE cl.PAYMENT_METHOD_ID = h.PAYMENT_METHOD_ID AND cl.LANG = #{request.locale,jdbcType=VARCHAR} ) PAYMENT_METHOD_NAME,
            h.PAYMENT_USEDE_ID,
            ( SELECT pul.DESCRIPTION FROM csh_mo_payment_used_tl pul WHERE pul.PAYMENT_USEDE_ID = h.PAYMENT_USEDE_ID AND pul.LANG = #{request.locale,jdbcType=VARCHAR} ) PAYMENT_USEDE_NAME,

            h.PAYEE_CATEGORY,
            ( SELECT meaning FROM sys_code_v sc WHERE sc.CODE = 'PAYMENT_OBJECT' AND sc.VALUE = h.payee_category ) payee_category_name,
            h.payee_id,
            (
        CASE

            WHEN h.payee_category = 'EMPLOYEE' THEN
            ( SELECT ee.NAME FROM exp_employee ee WHERE ee.employee_id = h.payee_id )
            WHEN h.payee_category = 'VENDER' THEN
            (
            SELECT
                psvt.description
            FROM
                pur_system_vender psv
                LEFT JOIN pur_system_vender_tl psvt ON ( psv.vender_id = psvt.vender_id AND psvt.lang = #{request.locale,jdbcType=VARCHAR} )
            WHERE
                psv.vender_id = h.payee_id
            )
            WHEN h.payee_category = 'CUSTOMER' THEN
            (
            SELECT
                osct.description
            FROM
                ord_system_customer osc
                LEFT JOIN ord_system_customer_tl osct ON ( osc.customer_id = osct.customer_id AND osct.lang = #{request.locale,jdbcType=VARCHAR} )
            WHERE
                osc.customer_id = h.payee_id
            )
        END
            ) AS payee_name,
            h.AMOUNT,
            h.CURRENCY_CODE,
            (
            SELECT
                gct.currency_name
            FROM
                gld_currency gc
                LEFT JOIN gld_currency_tl gct ON gc.currency_id = gct.currency_id
                AND gct.lang = #{request.locale,jdbcType=VARCHAR}
            WHERE
                gc.currency_code = h.CURRENCY_CODE
            ) currency_name,
            ( SELECT gc.currency_symbol FROM gld_currency gc WHERE gc.currency_code = h.currency_code ) currency_symbol,
            (
            CASE

                    WHEN ( SELECT sum( l.AMOUNT ) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h.REQUISITION_HDS_ID ) IS NULL THEN
                    0 ELSE ( SELECT sum( l.amount ) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h.REQUISITION_HDS_ID )
                END
                ) AS total_amount,
                h.description,
                h.`STATUS`,
                ( SELECT cv.meaning FROM sys_code_v cv WHERE cv.CODE = 'PAYMENT_REQUISITION_STATUS' AND cv.VALUE = h.STATUS ) AS status_name,
                h.APPROVAL_DATE,
                h.APPROVAL_DATE_TZ,
                h.APPROVAL_DATE_LTZ,
                h.APPROVED_BY,
                h.CLOSED_DATE,
                h.CLOSED_DATE_TZ,
                h.CLOSED_DATE_LTZ,
                h.source_type,
                h.SOURCE_HEADER_ID,
                (
                SELECT
                    ee.NAME
                FROM
                    sys_user su,
                    exp_employee ee
                WHERE
                    su.employee_id = ee.employee_id
                    AND su.user_id = h.created_by
                ) AS created_by_name,
              (
                SELECT
                ea.account_name
                FROM
                exp_employee ee
                LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
                LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
                LEFT JOIN exp_mo_employee_type_tl emett ON (
                emet.employee_type_id = emett.employee_type_id
                AND emett.lang = #{request.locale})

                WHERE
                ea.primary_flag = 'Y'
                AND ea.enabled_flag = 'Y'
                AND emet.enabled_flag = 'Y'
                AND ee.employee_id = #{request.employeeId}) account_name,
                (
                SELECT
                ea.account_number
                FROM
                exp_employee ee
                LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
                LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
                LEFT JOIN exp_mo_employee_type_tl emett ON (
                emet.employee_type_id = emett.employee_type_id
                AND emett.lang = #{request.locale})

                WHERE
                ea.primary_flag = 'Y'
                AND ea.enabled_flag = 'Y'
                AND emet.enabled_flag = 'Y'
                AND ee.employee_id = #{request.employeeId}) account_number,
                NULL bank_code,
                NULL bank_name,
                NULL bank_location_code,
                NULL bank_location_name,
                NULL province_code,
                NULL province_name,
                NULL city_code,
                NULL city_name,
                h.audit_flag,
                h.reversed_flag,
                ( SELECT prt.AUTO_APPROVE_FLAG FROM acp_mo_pay_req_type prt WHERE prt.MO_PAY_REQ_TYPE_ID = h.MO_PAY_REQ_TYPE_ID ) AS auto_approve_flag,
                (SELECT
                    ( CASE WHEN ee.PHONE IS NULL THEN ee.MOBIL ELSE ee.PHONE END )
                FROM
                    exp_employee ee
                WHERE
                    ee.employee_id = h.EMPLOYEE_ID) AS phone,
                (SELECT
                    amrt.payment_type_code
                FROM
                    acp_mo_pay_req_type amrt
                WHERE
                    amrt.mo_pay_req_type_id = h.MO_PAY_REQ_TYPE_ID) payment_type
    </sql>

    <select id="queryMain" resultMap="BaseResultMap">
        <include refid="query_include"/>,
        v2.paidAmount  as paid_amount,
        v2.progress_status,
        ( SELECT meaning FROM sys_code_v sc WHERE sc.CODE = 'DOC_PROGRESS_STATUS' AND sc.VALUE = v2.progress_status ) as progress_status_name
        FROM
        acp_requisition_hd h,
        (SELECT
        (
            CASE
            v.STATUS
            WHEN 'COMPLETELY_APPROVED' THEN
            (
            CASE

            WHEN v.AUDIT_FLAG != 'Y' THEN
            'COMPLETELY_APPROVED' ELSE (
            CASE

            WHEN v.writeOffAmount = 0 THEN
            ( CASE WHEN v.REVERSED_FLAG = 'W' THEN 'REVERSE' ELSE ( CASE WHEN paidAmount = 0 THEN 'AUDIT' END ) END )
            END
            )
            END
            ) ELSE v.STATUS
            END
        ) AS progress_status,
        v.paidAmount,
        v.REQUISITION_HDS_ID
        FROM
        (
            SELECT
            (
            SELECT
            ( CASE WHEN sum( arr.amount ) IS NULL THEN 0 ELSE sum( arr.amount ) END )
            FROM
            acp_requisition_ref arr
            WHERE
            EXISTS ( SELECT 1 FROM acp_requisition_ln arl WHERE arl.requisition_hds_id = h2.requisition_hds_id AND arl.requisition_lns_id = arr.requisition_lns_id )
            ) AS paidAmount,
            (
            CASE

            WHEN ( SELECT sum( l.AMOUNT ) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h2.REQUISITION_HDS_ID ) IS NULL THEN
            0 ELSE ( SELECT sum( l.amount ) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h2.REQUISITION_HDS_ID )
            END
            ) AS totalAmount,
            (
            SELECT
            ( CASE WHEN sum( wo.csh_write_off_amount ) IS NULL THEN 0 ELSE sum( wo.csh_write_off_amount ) END )
            FROM
            csh_write_off wo
            WHERE
            wo.document_source = 'ACP_REQUISITION'
            AND wo.document_header_id = h2.REQUISITION_HDS_ID
            ) AS writeOffAmount,
            h2.REQUISITION_HDS_ID,
            h2.`STATUS`,
            h2.AUDIT_FLAG,
            h2.REVERSED_FLAG
            FROM
            acp_requisition_hd h2
            ) v
        ) v2
        where
        h.REQUISITION_HDS_ID = v2.REQUISITION_HDS_ID
        and h.company_id = #{request.companyId}
        AND h.created_by = #{request.userId}
        <if test="acpRequisitionDateScope!=null">
            AND h.requisition_date &gt;=
            (case #{acpRequisitionDateScope}
            when '000-007' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 WEEk,'%y-%m-%d'),'%y-%m-%d')
            when '000-030' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-090' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 3 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-180' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 6 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-365' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 YEAR,'%y-%m-%d'),'%y-%m-%d')
            else
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 20 YEAR,'%y-%m-%d'),'%y-%m-%d')
            end)
        </if>

        <if test="moPayReqTypeId!=null">
            AND h.MO_PAY_REQ_TYPE_ID = #{moPayReqTypeId}
        </if>
        <if test="requisitionNumber!=null">
            AND h.requisition_number like concat('%',#{requisitionNumber},'%')
        </if>
        <if test="requisitionDateFrom!=null">
            AND h.requisition_date &gt;= #{requisitionDateFrom}
        </if>
        <if test="requisitionDateTo!=null">
            AND h.requisition_date &lt;= #{requisitionDateTo}
        </if>
        <if test="amountFrom != null" >
            AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h.REQUISITION_HDS_ID ) &gt;= #{amountFrom}
        </if>
        <if test="amountTo != null" >
            AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = h.REQUISITION_HDS_ID ) &lt;= #{amountTo}
        </if>
        <if test="employeeId != null" >
            AND h.employee_id = #{employeeId}
        </if>
        <if test="currencyCode != null" >
            AND h.currency_code = #{currencyCode}
        </if>
        <if test="payeeCategory != null" >
            AND h.payee_category = #{payeeCategory}
        </if>
        <if test="payeeId != null" >
            AND h.payee_id = #{payeeId}
        </if>
        <if test="createdDateFrom!=null">
            AND h.creation_date &gt;= #{createdDateFrom}
        </if>
        <if test="createdDateTo!=null">
            AND h.creation_date &lt;= #{createdDateTo}
        </if>
        <if test="description!=null">
            AND h.description like concat('%', #{description}, '%')
        </if>
    </select>

    <select id="selectByHeaderId" resultMap="BaseResultMap">
        <include refid="query_include"/>
        FROM
        acp_requisition_hd h
        where h.REQUISITION_HDS_ID = #{requisitionHdsId}
        UNION ALL
        SELECT NULL
        requisition_hds_id,
        NULL requisition_number,
        #{request.companyId} AS company_id,
        (
        SELECT
        ct.company_short_name
        FROM
        fnd_company_tl ct
        WHERE
        ct.company_id = #{request.companyId}

        AND ct.lang = #{request.locale}) AS company_name,
        (
        SELECT
        eea.position_id
        FROM
        exp_employee_assign eea
        WHERE
        eea.employee_id = #{employeeId}

        AND eea.company_id = #{request.companyId}

        AND eea.primary_position_flag = 'Y'
        AND eea.enabled_flag = 'Y'
        ) AS positionId,
        (
        SELECT
        opt.description
        FROM
        exp_org_position_tl opt
        WHERE
        opt.position_id = positionId
        AND opt.lang = #{request.locale}) AS position_name,
        ( SELECT op.unit_id FROM exp_org_position op WHERE op.position_id = positionId ) AS unitId,
        (
        SELECT
        ou.description
        FROM
        exp_org_unit_tl ou
        WHERE
        ou.unit_id = unitId
        AND ou.lang = #{request.locale}) AS unit_name,
        #{employeeId} AS employeeId,
        (
        SELECT
        ee.NAME
        FROM
        exp_employee ee
        WHERE
        ee.employee_id = #{employeeId}) AS employee_name,
        #{accEntityId} AS accEntityId,
        (
        SELECT
        aet.acc_entity_name
        FROM
        gld_accounting_entity_tl aet
        WHERE
        aet.acc_entity_id = #{accEntityId} and aet.lang = #{request.locale,jdbcType=VARCHAR}) AS acc_entity_name,
        CURRENT_TIMESTAMP requisition_date,
        NULL requisition_date_tz,
        NULL requisition_date_ltz,
        #{moPayReqTypeId} AS mo_pay_req_type_id,
        (
        SELECT
        al.DESCRIPTION
        FROM
        acp_mo_pay_req_type_tl al
        WHERE
        al.MO_PAY_REQ_TYPE_ID = #{moPayReqTypeId} AND al.lang = #{request.locale,jdbcType=VARCHAR} ) AS mo_pay_req_type_name,
        'BUSINESS' transaction_category,
        NULL payment_method_id,
        NULL payment_method_name,
        (select amru.payment_usede_id
        from acp_mo_pay_req_tp_ref_used amru
        where amru.mo_pay_req_type_id = #{moPayReqTypeId}
        and amru.default_flag = 'Y') AS paymentUsedeId,
        ( SELECT pul.DESCRIPTION FROM csh_mo_payment_used_tl pul WHERE pul.PAYMENT_USEDE_ID = paymentUsedeId AND pul.LANG = #{request.locale,jdbcType=VARCHAR} ) AS payment_usede_name,
        'EMPLOYEE' payeeCategory,
        ( SELECT meaning FROM sys_code_v sc WHERE sc.CODE = 'PAYMENT_OBJECT' AND sc.VALUE = payeeCategory ) payee_category_name,
        #{employeeId} AS payeeId,
        ( SELECT ee.NAME FROM exp_employee ee WHERE ee.employee_id = payeeId ) AS payee_name,
        0 amount,
        (
        SELECT
        ifnull(
        prt.currency_code,
        (
        SELECT
        ae.pay_currency_code
        FROM
        gld_accounting_entity ae,
        gld_set_of_book sob,
        gld_acc_entity_ref_sob aers
        WHERE
        ae.acc_entity_id = aers.acc_entity_id
        AND aers.set_of_books_id = sob.set_of_books_id
        AND aers.default_flag = 'Y'
        AND ae.acc_entity_id = #{accEntityId}))

        FROM
        acp_mo_pay_req_type prt
        WHERE
        prt.mo_pay_req_type_id = #{moPayReqTypeId}) AS currencyCode,
        (
        SELECT
        gct.currency_name
        FROM
        gld_currency gc
        LEFT JOIN gld_currency_tl gct ON gc.currency_id = gct.currency_id
        AND gct.lang = #{request.locale}

        WHERE
        gc.currency_code = currencyCode
        ) AS currency_name,
        NULL currency_symbol,
        0 total_amount,
        NULL description,
        'GENERATE' STATUS,
        ( SELECT cv.meaning FROM sys_code_v cv WHERE cv.CODE = 'PAYMENT_REQUISITION_STATUS' AND cv.VALUE = 'GENERATE' ) status_name,
        NULL approval_date,
        NULL approval_date_tz,
        NULL approval_date_ltz,
        NULL approved_by,
        NULL closed_date,
        NULL closed_date_tz,
        NULL closed_date_ltz,
        NULL source_type,
        NULL source_header_id,
        (
        SELECT
        ee.NAME
        FROM
        sys_user su,
        exp_employee ee
        WHERE
        su.employee_id = ee.employee_id
        AND su.user_id = #{request.userId}) AS created_by_name,
        (
        SELECT
        ea.account_name
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) account_name,
        (
        SELECT
        ea.account_number
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) account_number,
        (
        SELECT
        ea.bank_code
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) bank_code,
        (
        SELECT
        ea.bank_name
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) bank_name,
        (
        SELECT
        ea.bank_location_code
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) bank_location_code,
        (
        SELECT
        ea.bank_location
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) bank_location_name,
        (
        SELECT
        ea.province_code
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) province_code,
        (
        SELECT
        ea.province_name
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) province_name,
        (
        SELECT
        ea.city_code
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) city_code,
        (
        SELECT
        ea.province_name
        FROM
        exp_employee ee
        LEFT JOIN exp_employee_account ea ON ee.employee_id = ea.employee_id
        LEFT JOIN exp_mo_employee_type emet ON ee.employee_type_id = emet.employee_type_id
        LEFT JOIN exp_mo_employee_type_tl emett ON (
        emet.employee_type_id = emett.employee_type_id
        AND emett.lang = #{request.locale})

        WHERE
        ea.primary_flag = 'Y'
        AND ea.enabled_flag = 'Y'
        AND emet.enabled_flag = 'Y'
        AND ee.employee_id = #{employeeId}) city_name,
        'N' AS audit_flag,
        'N' AS reversed_flag,
        (
        SELECT
        prt.AUTO_APPROVE_FLAG
        FROM
        acp_mo_pay_req_type prt
        WHERE prt.MO_PAY_REQ_TYPE_ID = #{moPayReqTypeId} ) auto_approve_flag,
        (SELECT
        ( CASE WHEN ee.PHONE IS NULL THEN ee.MOBIL ELSE ee.PHONE END )
        FROM
        exp_employee ee
        WHERE
        ee.employee_id = #{employeeId}) AS phone,
        (SELECT
        amrt.payment_type_code
        FROM
        acp_mo_pay_req_type amrt
        WHERE
        amrt.mo_pay_req_type_id =  #{moPayReqTypeId}) payment_type
        FROM DUAL
        WHERE #{requisitionHdsId } IS NULL
    </select>

<!--    <select id="queryAuditResult" resultMap="BaseResultMap">-->
<!--        SELECT-->
<!--	*-->
<!--    FROM-->
<!--        (-->
<!--        SELECT-->
<!--            h.requisition_hds_id,-->
<!--            h.requisition_number,-->
<!--            h.acc_entity_id,-->
<!--            gaet.acc_entity_name,-->
<!--            h.mo_pay_req_type_id,-->
<!--            amt.description AS mo_pay_req_type_name,-->
<!--            h.employee_id,-->
<!--            ee.`name` AS employee_name,-->
<!--            h.currency_code AS payment_currency_code,-->
<!--            gct.currency_name AS payment_currency_name,-->
<!--            IFNULL( arl.amount, 0 ) AS payment_amount,-->
<!--            h.requisition_date AS requisition_date,-->
<!--            h.STATUS,-->
<!--            h.description,-->
<!--            h.je_creation_status-->
<!--        FROM-->
<!--            acp_requisition_hd h,-->
<!--            gld_accounting_entity_tl gaet,-->
<!--            acp_mo_pay_req_type_tl amt,-->
<!--            exp_employee ee,-->
<!--            gld_currency gc,-->
<!--            gld_currency_tl gct,-->
<!--            acp_requisition_ln arl-->
<!--            WHERE-->
<!--            h.acc_entity_id        = #{accEntityId}-->
<!--            AND h.ACC_ENTITY_ID = gaet.ACC_ENTITY_ID-->
<!--            AND gaet.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}-->
<!--            AND h.mo_pay_req_type_id = amt.mo_pay_req_type_id-->
<!--            AND amt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}-->
<!--            AND h.employee_id = ee.employee_id-->
<!--            AND h.currency_code = gc.currency_code-->
<!--            AND gc.currency_id = gct.currency_id-->
<!--            AND gct.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}-->
<!--            AND h.requisition_hds_id = arl.requisition_hds_id-->
<!--            AND h.STATUS = 'COMPLETELY_APPROVED'-->
<!--            AND IFNULL( h.audit_flag, 'N' ) = 'N'-->
<!--            AND EXISTS ( SELECT 1 FROM ssc_task_pool_local l WHERE l.doc_category = 'ACP_REQUISITION' AND l.doc_id = h.requisition_hds_id )-->
<!--        ) v-->
<!--        ORDER BY-->
<!--	        requisition_number-->
<!--    </select>-->

    <select id="queryAuditResult" resultMap="BaseResultMap">
        SELECT
	*
    FROM
        (
        SELECT
            h.requisition_hds_id,
            h.requisition_number,
            h.acc_entity_id,
            gaet.acc_entity_name,
            h.mo_pay_req_type_id,
            amt.description AS mo_pay_req_type_name,
            h.employee_id,
            ee.`name` AS employee_name,
            h.currency_code AS payment_currency_code,
            gct.currency_name AS payment_currency_name,
            IFNULL( arl.amount, 0 ) AS payment_amount,
            h.requisition_date AS requisition_date,
            h.STATUS,
            (select meaning from sys_code_v where `code` = 'EXP_EXPENSE_REPORT_STATUS' and `value` = h.status ) as requisition_status_name,
            h.description,
            h.je_creation_status
        FROM
            acp_requisition_hd h,
            gld_accounting_entity_tl gaet,
            acp_mo_pay_req_type_tl amt,
            exp_employee ee,
            gld_currency gc,
            gld_currency_tl gct,
            acp_requisition_ln arl
            WHERE
            h.acc_entity_id        = #{accEntityId}
            AND h.ACC_ENTITY_ID = gaet.ACC_ENTITY_ID
            AND gaet.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
            AND h.mo_pay_req_type_id = amt.mo_pay_req_type_id
            AND amt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
            AND h.employee_id = ee.employee_id
            AND h.currency_code = gc.currency_code
            AND gc.currency_id = gct.currency_id
            AND gct.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}
            AND h.requisition_hds_id = arl.requisition_hds_id
            AND h.STATUS = 'COMPLETELY_APPROVED'
            AND IFNULL( h.audit_flag, 'N' ) = 'N'
        ) v
        <where>
            <if test="accEntityId!=null and accEntityId!=''">
                and v.acc_entity_id = #{accEntityId}
            </if>
            <if test="requisitionNumber!=null and requisitionNumber!=''">
                and v.requisition_number like concat('%',#{requisitionNumber},'%')
            </if>
            <if test="moPayReqTypeId!=null and moPayReqTypeId!=''">
                and v.mo_pay_req_type_id = #{moPayReqTypeId}
            </if>
            <if test="employeeId!=null and employeeId!=''">
                and v.employee_id = #{employeeId}
            </if>
            <if test="currencyCode!=null and currencyCode!=''">
                and v.payment_currency_code = #{currencyCode}
            </if>
            <if test="requisitionDateFrom!=null and requisitionDateFrom!=''">
                and v.requisition_date &gt;= #{requisitionDateFrom}
            </if>
            <if test="requisitionDateTo!=null and requisitionDateTo!=''">
                and v.requisition_date &lt;= #{requisitionDateTo}
            </if>
        </where>
        ORDER BY
	        requisition_number
    </select>

    <!-- Modify Tagin/2019.05.07 付款申请单头基础信息 -->
    <select id="getAcpRequisitionHeader" resultMap="BaseResultMap">
        select
            arh.company_id,
            arh.unit_id,
            arh.position_id,
            arh.acc_entity_id,
            fc.mag_org_id,
            sob.set_of_books_id,
            case
                when gae.functional_currency_code is null then sob.functional_currency_code
                else gae.functional_currency_code
            end functional_currency_code,
            eoao.resp_center_id
        from
            acp_requisition_hd arh
        left join fnd_company fc on
            arh.company_id = fc.company_id
        left join (
            select
                gars.acc_entity_id,
                gars.set_of_books_id,
                gsob.functional_currency_code
            from
                gld_acc_entity_ref_sob gars
            left join gld_set_of_book gsob on
                gars.set_of_books_id = gsob.set_of_books_id
            where
                gars.enabled_flag = 'Y'
                and gars.default_flag = 'Y') sob on
            arh.acc_entity_id = sob.acc_entity_id
        left join gld_accounting_entity gae on
            arh.acc_entity_id = gae.acc_entity_id
        left join exp_org_unit_ref_acc_org eoao on
            arh.acc_entity_id = eoao.acc_entity_id
            and arh.unit_id = eoao.unit_id
            and eoao.enabled_flag = 'Y'
            and eoao.default_flag = 'Y'
        where
            arh.requisition_hds_id = #{requisitionHdsId, javaType=java.lang.Long, jdbcType=DECIMAL}
    </select>

    <select id="queryForAudit" parameterType="java.lang.Long" resultMap="BaseResultMap">
                SELECT
            h.requisition_hds_id,
            a.payment_type_code as payment_type,
            h.requisition_number,
            h.acc_entity_id
        FROM
            acp_requisition_hd h,
            acp_mo_pay_req_type a
        WHERE
            h.requisition_hds_id = #{requisitionHdsId}
            AND h.mo_pay_req_type_id = a.mo_pay_req_type_id
            AND h.STATUS = 'COMPLETELY_APPROVED'
            AND ( h.audit_flag IS NULL OR h.audit_flag = 'N' )
            AND h.closed_date IS NULL
    </select>
    
    <update id="updateJeCreationStatus" parameterType="com.hand.hec.acp.dto.AcpRequisitionHd">
        UPDATE acp_requisition_hd
        SET JE_CREATION_STATUS =#{jeCreationStatus},
            LAST_UPDATE_DATE = CURRENT_TIMESTAMP,
            LAST_UPDATED_BY = #{request.userId}
        WHERE
            REQUISITION_HDS_ID = #{requisitionHdsId}
    </update>

    <select id="getDocNumber" resultType="string">
        select arh.requisition_number
              from acp_requisition_hd arh
             where arh.requisition_hds_id =
                   (select arl.requisition_hds_id
                      from csh_transaction_line ctl,
                           acp_requisition_ref  arr,
                           acp_requisition_ln   arl
                     where ctl.transaction_header_id = #{transactionHeaderId}
                           and ctl.transaction_line_id =
                           arr.csh_transaction_line_id
                           and arr.requisition_lns_id = arl.requisition_lns_id
                           limit 1)
    </select>

    <select id="queryRequisition" resultMap="BaseResultMap">
        SELECT DISTINCT
        *
        FROM
        (SELECT
        a.requisition_hds_id,
        b.requisition_number,
        b.employee_id,
        b.description ,
        c.name employee_name,
        DATE_FORMAT(b.requisition_date,'%Y-%m-%d %H:%i:%s')  requisition_date,
        b.currency_code,
        (SELECT
        SUM(lns.amount)
        FROM
        acp_requisition_ln lns
        WHERE
        lns.requisition_hds_id = a.requisition_hds_id
        ) amount,
        ifnull(
        (SELECT
        SUM(r.amount)
        FROM
        acp_requisition_ref r,
        acp_requisition_ln lns
        WHERE
        lns.requisition_lns_id = r.requisition_lns_id AND
        lns.requisition_hds_id = a.requisition_hds_id
        ), 0) already_paying,

        (SELECT
        b1.DESCRIPTION
        FROM
        sys_code_b a1,
        sys_code_value_b b1
        WHERE
        a1.code_id      = b1.code_id AND
        a1.code         = 'PAYMENT_REQUISITION_STATUS' AND
        a1.enabled_flag = 'Y' AND
        b1.enabled_flag = 'Y' AND
        b1.value   = b.status
        ) statusName,
        DATE_FORMAT(b.closed_date,'%Y-%m-%d %H:%i:%s')  closed_date,
        b.status ,
        b.mo_pay_req_type_id,

        et.DESCRIPTION mo_pay_req_type_name,
        f.currency_name
        FROM
        acp_requisition_ln a,
        acp_requisition_hd b,
        exp_employee c,
        exp_employee_assign d,
        acp_mo_pay_req_type e,
        acp_mo_pay_req_type_tl et,
        gld_currency f,
        (SELECT DISTINCT
        t2.employee_id
        FROM
        exp_document_authority a,
        exp_employee_assign t,
        exp_employee_assign t2,
        exp_org_position p,
        sys_user su
        WHERE
        su.user_id     = #{request.userId} AND
        a.doc_category = 'ACP_REQUISITION' AND
        (
        a.granted_position_id IS NULL OR
        a.granted_position_id  = t.position_id AND
        t.enabled_flag         = 'Y' AND
        t.company_id           = a.company_id AND
        t.employee_id          = su.employee_id
        )
        AND
        ifnull(a.granted_employee_id, su.employee_id) = su.employee_id AND
        t2.enabled_flag                            = 'Y' AND
        p.enabled_flag                             = 'Y' AND
        p.position_id                              = t2.position_id AND
        a.start_date_active                       &lt;= now() AND
        (
        a.end_date_active IS NULL OR
        a.end_date_active &gt;= now()
        )
        AND
        a.inquire_flag = 'Y' AND
        t2.company_id  = a.company_id AND
        (
        a.position_id IS NULL OR
        a.position_id  = p.position_id
        )
        AND
        (
        a.employee_id IS NULL OR
        a.employee_id  = t2.employee_id
        )
        UNION
        SELECT
        su2.employee_id
        FROM
        sys_user su2
         WHERE
         su2.user_id = #{request.userId}
        ) x
        WHERE
        a.requisition_hds_id = b.requisition_hds_id AND
        b.employee_id        = c.employee_id AND
        c.employee_id        = d.employee_id AND
        (
        (
        #{allCompanyFlag} = 'N' AND
         d.company_id         = #{request.companyId}
        )
        OR
        (
          EXISTS
          (SELECT
               1
           FROM
                fnd_company fc
           WHERE
           fc.company_id  = d.company_id
        and fc.company_id in
        (select company_id from fnd_company where company_id = #{request.companyId} or fc.parent_company_id = #{request.companyId} )

         )
        AND
        #{allCompanyFlag}= 'Y'
        )
        ) AND
        b.mo_pay_req_type_id = e.mo_pay_req_type_id AND
        b.currency_code      = f.currency_code AND
        b.employee_id        = x.employee_id and
        e.MO_PAY_REQ_TYPE_ID = et.MO_PAY_REQ_TYPE_ID and
        et.lang = #{request.locale,jdbcType=VARCHAR}
        ) v
        <where>
            <if test="dto.requisitionNumber!=null and dto.requisitionNumber!=''">
                and v.requisition_number like concat('%',#{dto.requisitionNumber},'%')
            </if>
            <if test="dto.moPayReqTypeId!=null and dto.moPayReqTypeId!=''">
                and v.mo_pay_req_type_id = #{dto.moPayReqTypeId}
            </if>
            <if test="dto.employeeId!=null and dto.employeeId!=''">
                and v.employee_id = #{dto.employeeId}
            </if>
            <if test="dto.requisitionDateFrom!=null">
                AND v.requisition_date &gt;= #{dto.requisitionDateFrom}
            </if>
            <if test="dto.requisitionDateTo!=null">
                AND v.requisition_date &lt;= #{dto.requisitionDateTo}
            </if>

            <if test="dto.amountFrom != null" >
                AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = v.REQUISITION_HDS_ID ) &gt;= #{dto.amountFrom}
            </if>
            <if test="dto.amountTo != null" >
                AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = v.REQUISITION_HDS_ID ) &lt;= #{dto.amountTo}
            </if>
            <if test="dto.alreadyPayingFrom!=null and dto.alreadyPayingFrom!=''">
                and ifnull(
                (SELECT
                SUM(r.amount)
                FROM
                acp_requisition_ref r,
                acp_requisition_ln lns
                WHERE
                lns.requisition_lns_id = r.requisition_lns_id AND
                lns.requisition_hds_id = v.requisition_hds_id
                ), 0) &gt;= #{dto.alreadyPayingFrom}
            </if>
            <if test="dto.alreadyPayingTo!=null and dto.alreadyPayingTo!=''">
                and ifnull(
                (SELECT
                SUM(r.amount)
                FROM
                acp_requisition_ref r,
                acp_requisition_ln lns
                WHERE
                lns.requisition_lns_id = r.requisition_lns_id AND
                lns.requisition_hds_id = v.requisition_hds_id
                ), 0) &lt;= #{dto.alreadyPayingTo}
            </if>
        </where>
        ORDER BY
        requisition_number DESC
    </select>


    <select id="queryComRequisition" resultMap="BaseResultMap">
        SELECT DISTINCT
        *
        FROM
        (SELECT
        a.requisition_hds_id,
        b.requisition_number,
        b.employee_id,
        b.description ,
        c.name employee_name,
        DATE_FORMAT(b.requisition_date,'%Y-%m-%d %H:%i:%s')  requisition_date,
        b.currency_code,
        (SELECT
        SUM(lns.amount)
        FROM
        acp_requisition_ln lns
        WHERE
        lns.requisition_hds_id = a.requisition_hds_id
        ) amount,
        ifnull(
        (SELECT
        SUM(r.amount)
        FROM
        acp_requisition_ref r,
        acp_requisition_ln lns
        WHERE
        lns.requisition_lns_id = r.requisition_lns_id AND
        lns.requisition_hds_id = a.requisition_hds_id
        ), 0) already_paying,

        (SELECT
        b1.DESCRIPTION
        FROM
        sys_code_b a1,
        sys_code_value_b b1
        WHERE
        a1.code_id      = b1.code_id AND
        a1.code         = 'PAYMENT_REQUISITION_STATUS' AND
        a1.enabled_flag = 'Y' AND
        b1.enabled_flag = 'Y' AND
        b1.value   = b.status
        ) statusName,
        DATE_FORMAT(b.closed_date,'%Y-%m-%d %H:%i:%s')  closed_date,
        b.status ,
        b.mo_pay_req_type_id,

        et.DESCRIPTION mo_pay_req_type_name,
        f.currency_name
        FROM
        acp_requisition_ln a,
        acp_requisition_hd b,
        exp_employee c,
        exp_employee_assign d,
        acp_mo_pay_req_type e,
        acp_mo_pay_req_type_tl et,
        gld_currency f,
        (SELECT DISTINCT
        t2.employee_id
        FROM
        exp_document_authority a,
        exp_employee_assign t,
        exp_employee_assign t2,
        exp_org_position p,
        sys_user su
        WHERE
        su.user_id     = #{request.userId} AND
        a.doc_category = 'ACP_REQUISITION' AND
        (
        a.granted_position_id IS NULL OR
        a.granted_position_id  = t.position_id AND
        t.enabled_flag         = 'Y' AND
        t.company_id           = a.company_id AND
        t.employee_id          = su.employee_id
        )
        AND
        ifnull(a.granted_employee_id, su.employee_id) = su.employee_id AND
        t2.enabled_flag                            = 'Y' AND
        p.enabled_flag                             = 'Y' AND
        p.position_id                              = t2.position_id AND
        a.start_date_active                       &lt;= now() AND
        (
        a.end_date_active IS NULL OR
        a.end_date_active &gt;= now()
        )
        AND
        a.inquire_flag = 'Y' AND
        t2.company_id  = a.company_id AND
        (
        a.position_id IS NULL OR
        a.position_id  = p.position_id
        )
        AND
        (
        a.employee_id IS NULL OR
        a.employee_id  = t2.employee_id
        )
        UNION
        SELECT
        su2.employee_id
        FROM
        sys_user su2
         WHERE
         su2.user_id = #{request.userId}
        ) x
        WHERE
        a.requisition_hds_id = b.requisition_hds_id AND
        b.employee_id        = c.employee_id AND
        c.employee_id        = d.employee_id AND
        d.company_id in
          (SELECT
               fc.company_id
           FROM
                fnd_company fc
           WHERE
           fc.company_id  = d.company_id
        and fc.company_id in
        (select company_id from fnd_company where company_id = #{request.companyId} or fc.parent_company_id = #{request.companyId} )
         )  AND
        b.mo_pay_req_type_id = e.mo_pay_req_type_id AND
        b.currency_code      = f.currency_code AND
        b.employee_id        = x.employee_id and
        e.MO_PAY_REQ_TYPE_ID = et.MO_PAY_REQ_TYPE_ID and
        et.lang = #{request.locale,jdbcType=VARCHAR}
        ) v
        <where>
            <if test="dto.requisitionNumber!=null and dto.requisitionNumber!=''">
                and v.requisition_number like concat('%',#{dto.requisitionNumber},'%')
            </if>
            <if test="dto.moPayReqTypeId!=null and dto.moPayReqTypeId!=''">
                and v.mo_pay_req_type_id = #{dto.moPayReqTypeId}
            </if>
            <if test="dto.employeeId!=null and dto.employeeId!=''">
                and v.employee_id = #{dto.employeeId}
            </if>
            <if test="dto.requisitionDateFrom!=null">
                AND v.requisition_date &gt;= #{dto.requisitionDateFrom}
            </if>
            <if test="dto.requisitionDateTo!=null">
                AND v.requisition_date &lt;= #{dto.requisitionDateTo}
            </if>
            <if test="dto.amountFrom != null" >
                AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = v.REQUISITION_HDS_ID ) &gt;= #{dto.amountFrom}
            </if>
            <if test="dto.amountTo != null" >
                AND (SELECT ifnull(SUM(l.amount),0) FROM acp_requisition_ln l WHERE l.REQUISITION_HDS_ID = v.REQUISITION_HDS_ID ) &lt;= #{dto.amountTo}
            </if>
            <if test="dto.alreadyPayingFrom!=null and dto.alreadyPayingFrom!=''">
                and ifnull(
                (SELECT
                SUM(r.amount)
                FROM
                acp_requisition_ref r,
                acp_requisition_ln lns
                WHERE
                lns.requisition_lns_id = r.requisition_lns_id AND
                lns.requisition_hds_id = v.requisition_hds_id
                ), 0) &gt;= #{dto.alreadyPayingFrom}
            </if>
            <if test="dto.alreadyPayingTo!=null and dto.alreadyPayingTo!=''">
                and ifnull(
                (SELECT
                SUM(r.amount)
                FROM
                acp_requisition_ref r,
                acp_requisition_ln lns
                WHERE
                lns.requisition_lns_id = r.requisition_lns_id AND
                lns.requisition_hds_id = v.requisition_hds_id
                ), 0) &lt;= #{dto.alreadyPayingTo}
            </if>
        </where>
        ORDER BY
        requisition_number DESC
    </select>
</mapper>