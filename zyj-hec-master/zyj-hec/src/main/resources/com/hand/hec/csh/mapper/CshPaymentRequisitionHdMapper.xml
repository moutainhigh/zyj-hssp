<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.hec.csh.mapper.CshPaymentRequisitionHdMapper">
    <resultMap id="BaseResultMap" type="com.hand.hec.csh.dto.CshPaymentRequisitionHd">
        <result column="DOC_STATUS" property="docStatus" jdbcType="VARCHAR"/>
        <result column="PAYMENT_REQUISITION_HEADER_ID" property="paymentRequisitionHeaderId" jdbcType="BIGINT"/>
        <result column="REQUISITION_NUMBER" property="requisitionNumber" jdbcType="VARCHAR"/>
        <result column="COMPANY_ID" property="companyId" jdbcType="BIGINT"/>
        <result column="OPERATION_UNIT_ID" property="operationUnitId" jdbcType="BIGINT"/>
        <result column="UNIT_ID" property="unitId" jdbcType="BIGINT"/>
        <result column="POSITION_ID" property="positionId" jdbcType="BIGINT"/>
        <result column="EMPLOYEE_ID" property="employeeId" jdbcType="BIGINT"/>
        <result column="ACC_ENTITY_ID" property="accEntityId" jdbcType="BIGINT"/>
        <result column="REQUISITION_DATE" property="requisitionDate" jdbcType="DATE"/>
        <result column="REQUISITION_DATE_TZ" property="requisitionDateTz" jdbcType="DATE"/>
        <result column="REQUISITION_DATE_LTZ" property="requisitionDateLtz" jdbcType="DATE"/>
        <result column="PAYMENT_REQ_TYPE_ID" property="paymentReqTypeId" jdbcType="BIGINT"/>
        <result column="TRANSACTION_CATEGORY" property="transactionCategory" jdbcType="VARCHAR"/>
        <result column="DISTRIBUTION_SET_ID" property="distributionSetId" jdbcType="BIGINT"/>
        <result column="PAYMENT_METHOD_ID" property="paymentMethodId" jdbcType="BIGINT"/>
        <result column="PAYEE_CATEGORY" property="payeeCategory" jdbcType="VARCHAR"/>
        <result column="PAYEE_ID" property="payeeId" jdbcType="BIGINT"/>
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL"/>
        <result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="REQUISITION_PAYMENT_DATE" property="requisitionPaymentDate" jdbcType="DATE"/>
        <result column="REQUISITION_PAYMENT_DATE_TZ" property="requisitionPaymentDateTz" jdbcType="DATE"/>
        <result column="REQUISITION_PAYMENT_DATE_LTZ" property="requisitionPaymentDateLtz" jdbcType="DATE"/>
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="APPROVAL_DATE" property="approvalDate" jdbcType="DATE"/>
        <result column="APPROVED_BY" property="approvedBy" jdbcType="BIGINT"/>
        <result column="CLOSED_DATE" property="closedDate" jdbcType="DATE"/>
        <result column="CLOSED_DATE_TZ" property="closedDateTz" jdbcType="DATE"/>
        <result column="CLOSED_DATE_LTZ" property="closedDateLtz" jdbcType="DATE"/>
        <result column="SOURCE_TYPE" property="sourceType" jdbcType="VARCHAR"/>
        <result column="AUDIT_FLAG" property="auditFlag" jdbcType="VARCHAR"/>
        <result column="AUDIT_DATE" property="auditDate" jdbcType="DATE"/>
        <result column="REVERSED_FLAG" property="reversedFlag" jdbcType="VARCHAR"/>
        <result column="SOURCE_PMT_REQ_HEADER_ID" property="sourcePmtReqHeaderId" jdbcType="BIGINT"/>
        <result column="JE_CREATION_STATUS" property="jeCreationStatus" jdbcType="VARCHAR"/>
        <result column="EXPENSE_REQUISITION_HEADER_ID" property="expenseRequisitionHeaderId" jdbcType="BIGINT"/>
        <result column="ATTACHMENT_NUM" property="attachmentNum" jdbcType="BIGINT"/>
        <result column="SCHEDULE_REPAYMENT_DATE" property="scheduleRepaymentDate" jdbcType="DATE"/>
        <result column="REQUISITOR" property="requisitor" jdbcType="VARCHAR"/>
        <result column="CURRENCY_NAME" property="currencyName" jdbcType="VARCHAR"/>
        <result column="PAYEE_CATEGORY_NAME" property="payeeCategoryName" jdbcType="VARCHAR"/>
        <result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR"/>
        <result column="PAYMENT_REQ_TYPE_NAME" property="paymentReqTypeName" jdbcType="VARCHAR"/>
        <result column="POSITION_ID_DISPLAY" property="positionIdDisplay" jdbcType="VARCHAR"/>
        <result column="REQ_TYPE_DESC" property="reqTypeDesc" jdbcType="VARCHAR"/>
        <result column="EMPLOYEE_NAME" property="employeeName" jdbcType="VARCHAR"/>
        <result column="CATEGORY_DESC" property="categoryDesc" jdbcType="VARCHAR"/>
        <result column="PAR_PARTNER_NAME" property="parPartnerName" jdbcType="VARCHAR"/>
        <result column="AMOUNT_FROM" property="amountFrom" jdbcType="DECIMAL"/>
        <result column="AMOUNT_TO" property="amountTo" jdbcType="DECIMAL"/>

    </resultMap>

    <update id="updateByOptions" parameterType="com.hand.hec.csh.dto.CshPaymentRequisitionHd">
        update csh_payment_requisition_hd h
           set h.employee_id          = #{employeeId},
               h.requisition_date     = #{requisitionDate},
               h.requisition_date_tz  = #{requisitionDateTz},
               h.requisition_date_ltz = #{requisitionDateLtz},
               h.payment_req_type_id  = #{paymentReqTypeId},
               h.transaction_category = #{transactionCategory},
               h.payment_method_id    = #{paymentMethodId},
               h.payee_category       = #{payeeCategory},
               h.payee_id             = #{payeeId},
               h.currency_code        = #{currencyCode},
               h.amount               = #{amount},
               h.description          = #{description},
               h.status               = #{status},
               h.position_id          = #{positionId},
               h.unit_id              = #{unitId},
               h.last_update_date     = CURRENT_TIME,
               h.last_updated_by      = #{request.userId}
         where payment_requisition_header_id = #{paymentRequisitionHeaderId}
           and h.status in ('GENERATE'
                           ,'REJECTED'
                           ,'TAKEN_BACK')
    </update>

    <select id="selectForTimestamp" parameterType="java.util.Date" resultType="java.lang.Long">
        SELECT unix_timestamp(#{date}) from dual
    </select>

    <select id="selectForLineSumAmount" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
        select ifnull(sum(l.amount),0)
          from csh_payment_requisition_ln l
        where l.payment_requisition_header_id = #{paymentRequisitionHeaderId}
    </select>

    <select id="selectForDisReqId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select distinct l.ref_document_id
          from csh_payment_requisition_ln l
         where l.payment_requisition_header_id =  #{paymentRequisitionHeaderId}
           and l.payment_requisition_line_type = 'EXP_REQUISITION'
    </select>

    <select id="selectPayReqSumAmount" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
        select ifnull(sum(a.amount),0) line_sum_amount
        from csh_payment_requisition_ln a
       where a.payment_requisition_header_id = #{paymentRequisitionHeaderId}
         and a.payment_requisition_line_type = 'EXP_REQUISITION'
         and a.ref_document_id = #{expRequisitionHeaderId}
    </select>

    <select id="selectRemainAmount" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
        select ifnull(sum(v.need_payment_amount - v.requisited_amount),0) remain_amount
          from csh_payment_req_amount_v v
         where v.exp_requisition_header_id = #{expRequisitionHeaderId}
    </select>

    <select id="selectForPayReqHd" resultMap="BaseResultMap">
        select cprh.*
          from csh_payment_requisition_hd cprh
         where exists
           (select 1
              from csh_payment_requisition_ln cprl
             where cprl.ref_document_id = #{expRequisitionHeaderId}
               and cprl.payment_requisition_line_type = #{payReqLineType}
               and cprl.payment_requisition_header_id = cprh.payment_requisition_header_id)
               and cprh.status in ('GENERATE'
                                  ,'REJECTED'
                                  ,'TAKEN_BACK')
    </select>

    <select id="selectForPayReqHd2" resultMap="BaseResultMap">
        select cprh.*
          from csh_payment_requisition_hd cprh
         where exists
           (select 1
              from csh_payment_requisition_ln cprl
             where cprl.ref_document_id = #{expRequisitionHeaderId}
               and cprl.payment_requisition_line_type = #{payReqLineType}
               and cprl.payment_requisition_header_id = cprh.payment_requisition_header_id)
    </select>

    <select id="selectForReqSumAmount" resultType="java.math.BigDecimal">
        select ifnull(sum(requisition_functional_amount),0)
        from exp_requisition_line a
        where a.exp_requisition_header_id = #{expRequisitionHeaderId}
        <if test="paymentFlag!=null">
            and a.payment_flag = #{paymentFlag}
        </if>
    </select>

    <select id="selectForPayReqSumAmount" resultType="java.math.BigDecimal">
      select ifnull(sum(amount),0)
        from csh_payment_requisition_ln
       where payment_requisition_line_type = #{paymentReqLineType}
         and ref_document_id = #{expRequisitionHeaderId}
    </select>

    <select id="queryPayReq" resultMap="BaseResultMap">
        SELECT
        cprh.payment_requisition_header_id,
        cprh.company_id,
        cprh.operation_unit_id,
        cprh.employee_id,
        cprh.requisition_number,
        cprh.payment_req_type_id,
        prtt.description AS payment_req_type_name,
        cprh.transaction_category,
        cprh.distribution_set_id,
        cprh.payment_method_id,
        cprh.payee_category,
        cprh.payee_id,
        cprh.amount,
        cprh.acc_entity_id,
        cprh.currency_code,
        gct.currency_name,
        cprh.requisition_payment_date,
        cprh.description,
        cprh.status,
        cprh.approval_date,
        cprh.approved_by,
        date_format(ifnull(cprh.closed_date, CURRENT_DATE),'%Y-%m-%d') closed_date,
        cprh.unit_id,
        cprh.position_id,
        cprh.source_type,
        cprh.audit_flag,
        cprh.reversed_flag,
        cprh.source_pmt_req_header_id,
        cprh.je_creation_status,
        cprh.audit_date,
        (
        SELECT
        ifnull(sum(r.amount), 0)
        FROM
        csh_payment_requisition_ref r,
        csh_payment_requisition_ln lns
        WHERE
        lns.payment_requisition_line_id = r.payment_requisition_line_id
        AND lns.payment_requisition_header_id = cprh.payment_requisition_header_id
        ) paymented_amount,
        ( SELECT CONCAT(ee.NAME,'-',ee.employee_code) FROM exp_employee ee WHERE ee.employee_id = cprh.employee_id )
        requisitor,
        date_format(cprh.requisition_date,'%Y-%m-%d') requisition_date,
        (
        SELECT
        scvt.meaning
        FROM
        sys_code_b scb,
        sys_code_value_b scvb
        LEFT JOIN sys_code_value_tl scvt ON ( scvb.code_value_id = scvt.code_value_id AND scvt.lang =
        #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String} )
        WHERE
        scb.code_id = scvb.code_id
        AND scb.CODE = 'PAYMENT_OBJECT'
        AND scvb.VALUE = cprh.payee_category
        ) payee_category_name,
        (
        CASE

        WHEN cprh.payee_category = 'EMPLOYEE' THEN
        ( SELECT CONCAT(ee.employee_code,'-',ee.NAME) FROM exp_employee ee WHERE ee.employee_id = cprh.payee_id )
        WHEN cprh.payee_category = 'VENDER' THEN
        ( SELECT CONCAT(psv.vender_code,'-',psvt.description) FROM pur_system_vender psv left join pur_system_vender_tl
        psvt on psv.vender_id = psvt.vender_id AND psvt.lang =
        #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String} where psv.vender_id = cprh.payee_id)
        WHEN cprh.payee_category = 'CUSTOMER' THEN
        ( SELECT CONCAT(osc.customer_code,'-',osct.description) FROM
        ord_system_customer osc left join ord_system_customer_tl osct on(osc.customer_id=osct.customer_id AND osct.lang
        = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}) where osc.customer_id = cprh.payee_id)
        END
        ) payee_name
        FROM
        csh_payment_requisition_hd cprh,
        csh_mo_payment_req_type prt left join csh_mo_payment_req_type_tl prtt on
        (prt.mo_payment_req_type_id = prtt.mo_payment_req_type_id and prtt.lang =
        #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        gld_currency gc left join gld_currency_tl gct on (gc.currency_id = gct.currency_id and gct.lang =
        #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        where gc.currency_code = cprh.currency_code
        and cprh.company_id = #{request.companyId}
        and cprh.status = #{status}
        and cprh.closed_date is null
        and cprh.payment_req_type_id = prt.mo_payment_req_type_id
        <if test="requisitionNumber!=null">
    and requisition_number like concat('%',#{requisitionNumber},'%')
    </if>
    <if test="employeeId!=null">
    and employee_id = #{employeeId}
    </if>
    <if test="requisitionDateFrom!=null">
    and (#{requisitionDateFrom} is null or date_format(cprh.requisition_date,'%Y-%m-%d') &gt;= #{requisitionDateFrom})
    </if>
    <if test="requisitionDateTo!=null">
    and (#{requisitionDateTo} is null or date_format(cprh.requisition_date,'%Y-%m-%d') &lt;= #{requisitionDateTo})
    </if>
    <if test="amount!=null">
    and amount like concat('%',#{amount},'%')
    </if>
    <if test="payeeCategory!=null">
    and payee_category = #{payeeCategory}
    </if>
    <if test="payeeId!=null">
    and payee_id = #{payeeId}
    </if>
    <if test="currencyCode!=null">
    and cprh.currency_code like concat('%', #{currencyCode},'%')
    </if>
    <if test="reversedFlag!=null">
    and cprh.reversed_flag = #{reversedFlag}
    or cprh.reversed_flag is null
    </if>
    <if test="auditFlag!=null">
    and cprh.audit_flag = #{auditFlag}
    </if>
    </select>

    <select id="selectDetailByHdId" resultType="java.util.Map">
        SELECT
        v.*,
        (SELECT
        namecode
        FROM
        (SELECT
        ee.employee_id id,
        concat(ee.name, '-',ee.employee_code) namecode,
        'EMPLOYEE' payee_category
        FROM
        exp_employee ee,
        exp_employee_assign eea
        WHERE
        ee.employee_id = eea.employee_id
        and ee.enabled_flag = 'Y'
        AND eea.company_id = #{request.companyId}
        UNION
        SELECT
        sv.vender_id id,
        concat( svt.description, '-', sv.vender_code) namecode,
        'VENDER' payee_category
        FROM
        pur_system_vender sv left join pur_system_vender_tl svt on(sv.VENDER_ID = svt.VENDER_ID and svt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        sv.enabled_flag = 'Y'
        UNION
        SELECT
        osc.customer_id id,
        concat(osct.description,'-',osc.customer_code),
        'CUSTOMER' payee_category
        FROM
        ord_system_customer osc left join ord_system_customer_tl osct on(osc.customer_id = osct.customer_id and osct.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        osc.enabled_flag = 'Y'
        ) cat
        WHERE
        payee_category = v.payeeCategory
        AND id = v.payeeId
        ) AS pPayeeName,
        (SELECT
        scvt.meaning
        FROM
        sys_code_b scb,
        sys_code_value_b scvb
        LEFT JOIN sys_code_value_tl scvt ON ( scvb.code_value_id = scvt.code_value_id AND scvt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        scb.code_id = scvb.code_id
        AND scb.CODE = 'PAYMENT_REQUISITION_STATUS'
        AND scvb.enabled_flag = 'Y'
        AND scvb.value = v.pStatus) statusName,
        (SELECT
        COUNT(flw.document_id) cont
        FROM
        con_document_flow flw
        WHERE
        flw.document_type        = 'CON_CONTRACT' AND
        flw.source_document_type = 'CSH_PAYMENT_REQUISITION_LNS' AND
        flw.source_document_id   = #{paymentRequisitionHeaderId}
        ) contFlag,
        (select
        t1.parameter_value
        from sys_parameter_value t1,
        sys_parameter       t2
        where t2.parameter_code = 'CSH_PREQ_APPROVE_WORKFLOW_ENABLED'
        and t2.start_date_active &lt;= CURRENT_DATE
        and ifnull(t2.end_date_active,CURRENT_DATE) &gt;= CURRENT_DATE
        and (t1.level_id = 104 and t1.level_value = #{request.companyId})
        and t1.parameter_id = t2.parameter_id
        and t1.parameter_value is not null
        and ifnull(t2.company_enabled_flag,'N') = 'Y') AS approveWithReqFlag
        FROM
        (SELECT
        cprh.employee_id employeeID,
        cprh.acc_entity_id accEntityId,
        (SELECT
        concat(employee_code,'-',name)
        FROM
        exp_employee ee
        WHERE
        ee.employee_id = cprh.employee_id
        ) employeeIdDisplay,
        (SELECT
        name
        FROM
        exp_employee ee
        WHERE
        ee.employee_id =
        (SELECT employee_id FROM sys_user su WHERE su.user_id = cprh.created_by
        )
        ) paymentRequisitionCreateBy,
        date_format(cprh.requisition_date,'%Y-%m-%d') AS requisitionDate,
        cprh.currency_code AS currencyCode,
        gct.currency_name AS currencyName,
        gct.currency_name AS currencyCodeDisplay,
        cprh.requisition_number AS requisitionNumber,
        cprh.payee_category AS payeeCategory,
        (
        SELECT
        scvt.meaning
        FROM
        sys_code_b scb,
        sys_code_value_b scvb
        LEFT JOIN sys_code_value_tl scvt ON ( scvb.code_value_id = scvt.code_value_id AND scvt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        scb.code_id = scvb.code_id
        AND scb.code = 'PAYMENT_OBJECT'
        AND scvb.enabled_flag = 'Y'
        AND scvb.value = cprh.payee_category
        ) payeeCategoryDisplay,
        cprh.payee_id AS payeeId,
        cprh.amount,
        cprh.payment_method_id AS paymentMethodId,
        (SELECT
        cpmt.description
        FROM
        csh_payment_method cpm left join csh_payment_method_tl cpmt on(cpm.payment_method_id = cpmt.payment_method_id and cpmt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        cpm.payment_method_id = cprh.payment_method_id
        ) paymentMethodIdDisplay,
        cprh.description,
        cprh.operation_unit_id AS operationUnitId,
        cprh.payment_requisition_header_id AS paymentRequisitionHeaderId,
        cprh.position_id positionId,
        (SELECT
        eopt.description
        FROM
        exp_org_position eop left join exp_org_position_tl eopt on(eop.position_id = eopt.position_id and eopt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        eop.position_id = cprh.position_id
        ) positionIdDisplay,
        (SELECT
        concat(eop.description, '-', eop.position_code) parent_pos_desc
        FROM
        exp_org_position eop left join exp_org_position_tl eopt on(eop.position_id = eopt.position_id and eopt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        eop.enabled_flag = 'Y' AND
        eop.position_id  = cprh.position_id AND
        eop.company_id   = cprh.company_id
        ) posDesc,
        (SELECT
        concat(eopt.description, '-', eop.position_code) parent_pos_desc
        FROM
        exp_org_position eop left join exp_org_position_tl eopt on(eop.position_id = eopt.position_id and eopt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        exp_employee ee,
        exp_employee_assign eea
        WHERE
        ee.employee_id = eea.employee_id and
        eop.enabled_flag            = 'Y' AND
        eop.position_id             = eea.position_id AND
        eop.company_id              = cprh.company_id AND
        ee.employee_id           = cprh.employee_id AND
        eea.primary_position_flag = 'Y' AND
        eea.enabled_flag   = 'Y' AND
        ee.enabled_flag = 'Y'
        ) parentPosDesc,
        cprh.status pStatus,
        cprh.payment_req_type_id AS paymentReqTypeId,
        (SELECT
        cprtt.description
        FROM
        csh_mo_payment_req_type cprt left join csh_mo_payment_req_type_tl cprtt
        on(cprt.mo_payment_req_type_id = cprtt.mo_payment_req_type_id and cprtt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        cprt.mo_payment_req_type_id = cprh.payment_req_type_id
        ) AS cshTypeIdDisplay,
        (SELECT
        cprt.report_name
        FROM
        csh_mo_payment_req_type cprt
        WHERE
        cprt.mo_payment_req_type_id = cprh.payment_req_type_id
        ) reportName,
        cprh.source_type AS sourceType,
        cprh.attachment_num attachmentNum,
        payee.bank_code AS bankCode,
        payee.bank_name AS bankName,
        payee.bank_location_code AS bankLocationCode,
        payee.bank_location_name AS bankLocationName,
        payee.province_code AS provinceCode,
        payee.province_name AS provinceName,
        payee.city_code AS cityCode,
        payee.city_name AS cityName,
        payee.account_number AS accountNumber,
        payee.account_name AS accountName,
        payee.notes
        FROM
        csh_payment_requisition_hd cprh
        left join gld_currency gc on (cprh.currency_code = gc.currency_code)
        left join gld_currency_tl gct on(gc.currency_id = gct.currency_id and gct.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        left join (
        select ee.name as payee_name,
        ee.employee_code as payee_code,
        ee.employee_id as payee_id,
        ea.bank_code,
        ea.bank_name,
        ea.bank_location_code,
        ea.bank_location as bank_location_name,
        ea.province_code,
        ea.province_name,
        ea.city_code,
        ea.city_name,
        ea.account_number,
        ea.account_name,
        ea.notes,
        'EMPLOYEE' as payee_category,
        null as acc_entity_id,
        emet.employee_type_id payee_type_id,
        emet.employee_type_code payee_type_code,
        emett.description payee_type_name
        from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
        left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
        left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        where ea.primary_flag = 'Y'
        and ea.enabled_flag = 'Y'
        and emet.enabled_flag = 'Y'
        union all
        select vt.description as payee_name,
        v.vender_code as payee_code,
        v.vender_id as payee_id,
        b.bank_code,
        bt.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        va.province_code,
        va.province_name,
        va.city_code,
        va.city_name,
        va.account_number,
        va.account_name,
        va.notes,
        'VENDER' as payee_category,
        vae.acc_entity_id,
        pvt.vender_type_id payee_type_id,
        pvt.vender_type_code payee_type_code,
        pvt.description payee_type_name
        from pur_system_vender v
        left join pur_system_vender_tl vt on(v.vender_id = vt.vender_id and vt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        left join pur_vender_account va on v.vender_id = va.vender_id
        left join csh_cnaps cn on va.cnaps_code = cn.bank_location_code
        left join csh_bank b on va.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        left join pur_vender_type pvt on v.vender_type_id = pvt.vender_type_id
        left join pur_vender_type_tl pvtt on(pvt.vender_type_id = pvtt.vender_type_id and pvtt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        pur_system_vender_ref_ae  vae
        right join pur_vender_account_ref_ae aae on vae.acc_entity_id = aae.acc_entity_id

        where v.vender_id = vae.vender_id
        and va.account_id = aae.account_id
        and aae.primary_flag = 'Y'
        and va.enabled_flag = 'Y'
        and vae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and pvt.enabled_flag = 'Y'
        union all
        select ct.description as payee_name,
        c.customer_code as payee_code,
        c.customer_id as payee_id,
        b.bank_code,
        b.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        ca.province_code,
        ca.province_name,
        ca.city_code,
        ca.city_name,
        ca.account_number,
        ca.account_name,
        ca.notes,
        'CUSTOMER' as payee_category,
        cae.acc_entity_id,
        oct.customer_type_id payee_type_id,
        oct.customer_type_code payee_type_code,
        octt.description payee_type_name
        from ord_system_customer c
        left join ord_system_customer_tl ct on(c.customer_id = ct.customer_id and ct.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        left join ord_customer_account ca on c.customer_id = ca.customer_id
        left join csh_cnaps cn on ca.cnaps_code = cn.bank_location_code
        left join csh_bank b on ca.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        left join ord_customer_type oct on c.customer_type_id = oct.customer_type_id
        left join ord_customer_type_tl octt on(oct.customer_type_id = octt.customer_type_id and octt.lang = #{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        ord_system_customer_ref_ae  cae
        right join ord_customer_account_ref_ae aae on cae.acc_entity_id = aae.acc_entity_id

        where c.customer_id = cae.customer_id
        and ca.account_id = aae.account_id
        and ca.enabled_flag = 'Y'
        and aae.primary_flag = 'Y'
        and cae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and oct.enabled_flag = 'Y'
        ) payee on payee.payee_category = cprh.payee_category and
        (cprh.payee_category = 'EMPLOYEE' or
        payee.acc_entity_id = cprh.acc_entity_id) and payee.payee_id = cprh.payee_id
        WHERE
        cprh.payment_requisition_header_id = #{paymentRequisitionHeaderId}
        ) v
    </select>

    <select id="queryForFinance" resultType="java.util.Map">
      SELECT
        cprh.PAYMENT_REQUISITION_HEADER_ID paymentRequisitionHeaderId,
        cprh.COMPANY_ID companyId,
        cprh.OPERATION_UNIT_ID operationUnitId,
        cprh.EMPLOYEE_ID employeeId,
        cprh.REQUISITION_NUMBER requisitionNumber,
        cprh.PAYMENT_REQ_TYPE_ID paymentReqTypeId,
        cprh.TRANSACTION_CATEGORY transactionCategory,
        cprh.DISTRIBUTION_SET_ID distributionSetId,
        cprh.PAYMENT_METHOD_ID paymentMethodId,
        cprh.PAYEE_CATEGORY payeeCategory,
        cprh.PAYEE_ID payeeId,
        cprh.amount,
        cprh.CURRENCY_CODE currencyCode,
        cprh.REQUISITION_PAYMENT_DATE requisitionPaymentDate,
        cprh.description,
        cprh.status,
        cprh.APPROVAL_DATE approvalDate,
        cprh.APPROVED_BY approvedBy,
        cprh.CLOSED_DATE closedDate,
        cprh.UNIT_ID unitId,
        cprh.POSITION_ID positionId,
        cprh.SOURCE_TYPE sourceType,
        cprh.AUDIT_FLAG auditFlag,
        cprh.REVERSED_FLAG reversedFlag,
        cprh.SOURCE_PMT_REQ_HEADER_ID sourcePmtReqHeaderId,
        cprh.JE_CREATION_STATUS jeCreationStatus,
        cprh.AUDIT_DATE auditDate,
        ( SELECT concat(ee.name,'-',ee.employee_code) FROM exp_employee ee WHERE ee.employee_id = cprh.employee_id ) AS employeeName,
        cprh.requisition_date requisitionDate,
        (
        SELECT
            b.meaning
        FROM
            sys_code_b a,
            sys_code_value_b b
        WHERE
            a.code_id = b.code_id
            AND a.CODE = 'PAYMENT_OBJECT'
            AND b.value = cprh.payee_category
            ) AS payeeCategoryName,
            (
            case
                when cprh.payee_category = 'EMPLOYEE' then
                    ( SELECT concat(ee.employee_code,'-',ee.NAME) FROM exp_employee ee WHERE ee.employee_id = cprh.payee_id )
                when cprh.payee_category = 'VENDER' then
                    ( SELECT concat(sv.vender_code, '-', svt.description) FROM pur_system_vender sv,pur_system_vender_tl svt WHERE sv.vender_id = svt.vender_id and svt.lang = #{request.locale} and sv.vender_id = cprh.payee_id )
                when cprh.payee_category = 'CUSTOMER' then
                    ( SELECT concat(sc.customer_code,'-',sct.description) FROM ord_system_customer sc,ord_system_customer_tl sct WHERE sc.customer_id = sct.customer_id and sct.lang = #{request.locale} and sc.customer_id = cprh.payee_id )
            end
            ) AS payeeName,
            (
        SELECT
            ifnull( sum( w.csh_write_off_amount ), 0 )
        FROM
            csh_payment_requisition_ln cprl,
            csh_payment_requisition_ref r,
            csh_write_off w
        WHERE
            cprl.payment_requisition_line_id = r.payment_requisition_line_id
            AND r.write_off_id = w.write_off_id
            AND w.write_off_type = 'PAYMENT_PREPAYMENT'
            AND w.document_source = 'PAYMENT_REQUISITION'
            AND cprl.payment_requisition_header_id = cprh.payment_requisition_header_id
            ) AS paymentedAmount,
            (
        SELECT
            v.meaning
        FROM
            sys_code_value_b v,
            sys_code_b t
        WHERE
            t.CODE = 'PAYMENT_REQUISITION_STATUS'
            AND t.code_id = v.code_id
            AND v.value = cprh.STATUS
            ) AS statusDes,
            ( SELECT rtt.description FROM csh_mo_payment_req_type rt,csh_mo_payment_req_type_tl rtt WHERE rt.MO_PAYMENT_REQ_TYPE_ID = rtt.MO_PAYMENT_REQ_TYPE_ID and rtt.lang = #{request.locale} and rt.mo_payment_req_type_id = cprh.payment_req_type_id ) AS documentType,
            ( SELECT aet.acc_entity_name FROM gld_accounting_entity ae,gld_accounting_entity_tl aet WHERE ae.ACC_ENTITY_ID = aet.ACC_ENTITY_ID and aet.lang = #{request.locale} and ae.acc_entity_id = cprh.acc_entity_id ) AS accEntityName,
            (select ct.CURRENCY_NAME from gld_currency c,gld_currency_tl ct where c.currency_id = ct.CURRENCY_ID and ct.lang = #{request.locale} and c.CURRENCY_CODE = cprh.CURRENCY_CODE) currencyName
        FROM
            CSH_PAYMENT_REQUISITION_HD cprh
        WHERE
            (
                ( #{allCompanyFlag} = 'N' AND cprh.company_id = #{request.companyId} )
                OR (  #{allCompanyFlag} = 'Y'
                        AND (
                            cprh.company_id = #{request.companyId} or cprh.company_id in (SELECT
                                                                          company_id
                                                                          FROM
                                                                            (
                                                                              SELECT
                                                                                t1.company_id,
                                                                                IF( find_in_set( parent_company_id, @pids ) > 0, @pids := concat( @pids, ',', company_id ), 0 ) AS ischild
                                                                               FROM
                                                                               ( SELECT company_id, parent_company_id FROM fnd_company t ORDER BY parent_company_id, company_id ) t1,
                                                                               ( SELECT @pids := #{request.companyId} ) t2
                                                                               ) t3
                                                                          WHERE
                                                                          ischild != 0)
                            )
                )
            )
            <if test="requisitionNumber!=null">
                and cprh.requisition_number like concat('%',#{requisitionNumber},'%')
            </if>
            <if test="employeeId!=null">
                and cprh.employee_id = #{employeeId}
            </if>
            <if test="description!=null">
                and cprh.description like concat('%',#{description},'%')
            </if>
            <if test="requisitionDateFrom!=null">
                and cprh.requisition_date &gt;= #{requisitionDateFrom}
            </if>
            <if test="requisitionDateTo!=null">
                and cprh.requisition_date &lt;= #{requisitionDateTo}
            </if>
            <if test="amountFrom!=null">
                and cprh.amount &gt;= #{amountFrom}
            </if>
            <if test="amountTo!=null">
                and cprh.amount &lt;= #{amountTo}
            </if>
            <if test="payeeCategory!=null">
                and cprh.payee_category = #{payeeCategory}
            </if>
            <if test="payeeId!=null">
                and cprh.payee_id = #{payeeId}
            </if>
            <if test="currencyCode!=null">
                and cprh.currency_code = #{currencyCode}
            </if>
            <if test="status!=null">
                and cprh.status = #{status}
            </if>
            <if test="paymentMethodId!=null">
                and cprh.payment_method_id = #{paymentMethodId}
            </if>
            <if test="cshPaymentRequisitionTypeId!=null">
                and cprh.payment_req_type_id = #{cshPaymentRequisitionTypeId}
            </if>

        ORDER BY
            requisition_number DESC
    </select>

    <select id="queryForAudit" resultType="java.util.Map">
        SELECT
            v.*
        FROM
            (
        SELECT
            cprh.payment_requisition_header_id paymentRequisitionHeaderId,
            cprh.requisition_number requisitionNumber,
            cprh.company_id companyId,
            cprh.unit_id unitId,
            cprh.position_id positionId,
            cprh.employee_id employeeId,
            (select ee.name
               from exp_employee ee
                where ee.employee_id = cprh.employee_id) employeeName,
            cprh.acc_entity_id accEntityId,
            date_format( cprh.requisition_date, '%Y-%m-%d' ) requisitionDate,
            cprh.payment_req_type_id paymentReqTypeId,
            (
            select rtt.description
              from csh_mo_payment_req_type_tl rtt
             where rtt.mo_payment_req_type_id = cprh.payment_req_type_id
               and rtt.lang = #{request.locale}
            ) paymentReqTypeName,
            cprh.payee_category payeeCategory,
            (select cvb.meaning
               from sys_code_b cb
                 inner join sys_code_value_b cvb
                   on cb.code_id = cvb.code_id
                    left join sys_code_value_tl cvt
                      on cvb.code_value_id = cvt.code_value_id
                where cb.code = 'PAYMENT_OBJECT'
                  and cvb.value = cprh.payee_category
                  and cvt.lang = #{request.locale}) payeeCategoryName,
            cprh.payee_id payeeId,
            (
            case
                when cprh.payee_category = 'EMPLOYEE' then
                    (select concat(ee.employee_code,'-',ee.name) from exp_employee ee where ee.employee_id = cprh.payee_id)
                when cprh.payee_category = 'VENDER' then
                    (select concat(sv.vender_code,'-',svt.description) from pur_system_vender sv left join pur_system_vender_tl svt on sv.vender_id = svt.vender_id where sv.vender_id = cprh.payee_id and svt.lang = #{request.locale})
                when cprh.payee_category = 'CUSTOMER' then
                    (select concat(sc.customer_code,'-',sct.description) from ord_system_customer sc left join ord_system_customer_tl sct on sc.customer_id = sct.customer_id where sc.customer_id = cprh.payee_id and sct.lang = #{request.locale})
            end
            ) payeeName,
            cprh.amount,
            cprh.currency_code currencyCode,
            (select ct.currency_name from gld_currency c left join gld_currency_tl ct on c.currency_id = ct.currency_id where c.currency_code = cprh.currency_code and ct.lang = #{request.locale}) currencyName,
            cprh.description,
            cprh.status,
            (case
               when cprh.je_creation_status = 'SUCCESS' then
                     'Y'
                 else
                     'N'
             end
            ) je_creation_status,
            (case
               when (SELECT count(1) FROM csh_payment_requisition_ln cprl WHERE cprl.payment_requisition_header_id = cprh.payment_requisition_header_id AND cprl.cash_flow_item_id IS NULL) > 0 then
                    'Y'
                 else
                    'N'
             end
            ) cashFlowFlag
            FROM
                csh_payment_requisition_hd cprh
            WHERE
                cprh.company_id = #{request.companyId}
                AND cprh.acc_entity_id = #{accEntityId}
                AND cprh.STATUS = 'COMPLETELY_APPROVED'
                AND cprh.audit_flag = 'N'
                AND cprh.closed_date IS NULL
                AND EXISTS ( SELECT 1 FROM ssc_task_pool_local l WHERE l.doc_category = 'PAYMENT_REQUISITION' AND l.doc_id = cprh.payment_requisition_header_id )
                ) v
            <where>
                <if test="employeeId!=null">
                    v.employeeId = #{employeeId}
                </if>
                <if test="requisitionNumber!=null">
                    and v.requisitionNumber like concat('%',#{requisitionNumber},'%')
                </if>
                <if test="requisitionDateFrom!=null">
                    and v.requisitionDate &gt;= #{requisitionDateFrom}
                </if>
                <if test="requisitionDateTo!=null">
                    and v.requisitionDate &lt;= #{requisitionDateTo}
                </if>
                <if test="currencyCode!=null">
                    and v.currencyCode = #{currencyCode}
                </if>
                <if test="payeeCategory!=null">
                    and v.payeeCategory = #{payeeCategory}
                </if>
                <if test="payeeId!=null">
                    and v.payeeId = #{payeeId}
                </if>
            </where>
            ORDER BY
                v.requisitionNumber DESC
    </select>

    <select id="queryPayRequisitionMain" resultType="java.util.Map">
        SELECT
        1 AS fixedId,
        h.payment_requisition_header_id paymentRequisitionHeaderId,
        h.payment_req_type_id paymentReqTypeId,
        (select rtt.description
        from csh_mo_payment_req_type_tl rtt
        where rtt.mo_payment_req_type_id = h.payment_req_type_id
        and rtt.lang = #{request.locale}) paymentReqTypeName,
        h.requisition_number requisitionNumber,
        h.company_id AS companyId,
        (select ct.company_short_name
        from fnd_company_tl ct
        where ct.company_id = h.company_id
        and ct.lang = #{request.locale}) companyName,
        h.acc_entity_id AS accEntityId,
        (select aet.acc_entity_name
        from gld_accounting_entity_tl aet
        where aet.acc_entity_id = h.acc_entity_id
        and aet.lang = #{request.locale}) accEntityName,
        h.employee_id AS employeeId,
        (select ee.name
        from exp_employee ee
        where ee.employee_id = h.employee_id) employeeName,
        h.position_id AS positionId,
        (select opt.description
        from exp_org_position_tl opt
        where opt.position_id = h.position_id
        and opt.lang = #{request.locale}) positionName,
        h.unit_id AS unitId,
        (select ou.description
        from exp_org_unit_tl ou
        where ou.unit_id = h.unit_id
        and ou.lang = #{request.locale}) unitName,
        DATE_FORMAT(h.requisition_date,'%Y-%m-%d') requisitionDate,
        h.payee_category AS payeeCategory,
        (
        select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_OBJECT'
        and cv.value = h.payee_category
        ) payeeCategoryName,
        h.payee_id AS payeeId,
        (case
        when h.payee_category = 'EMPLOYEE' then
        (select ee.name
        from exp_employee ee
        where ee.employee_id = h.payee_id)
        when h.payee_category = 'VENDER' then
        (select svt.description
        from pur_system_vender_tl svt
        where svt.vender_id = h.payee_id
        and svt.lang = #{request.locale})
        when h.payee_category = 'CUSTOMER' then
        (select sct.description
        from ord_system_customer_tl sct
        where sct.customer_id = h.payee_id
        and sct.lang = #{request.locale})
        end) payeeName,
        payee.bank_code AS bankCode,
        payee.bank_name AS bankName,
        payee.bank_location_code AS bankLocationCode,
        payee.bank_location_name AS bankLocationName,
        payee.province_code AS provinceCode,
        payee.province_name AS provinceName,
        payee.city_code AS cityCode,
        payee.city_name AS cityName,
        payee.account_number AS accountNumber,
        payee.account_name AS accountName,
        h.currency_code AS paymentCurrencyCode,
        (select gct.currency_name
        from gld_currency gc left join
        gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = h.currency_code) AS currencyName,
        (select gc.currency_symbol
        from gld_currency gc
        where gc.currency_code = h.currency_code) AS paymentCurrencySymbol,
        (select gc.finance_precision
        from gld_currency gc
        where gc.currency_code = h.currency_code)  AS paymentCurrencyPrecision,
        (select ifnull(ae.functional_currency_code,
        sob.functional_currency_code)
        from gld_accounting_entity ae,
        gld_set_of_book        sob,
        gld_acc_entity_ref_sob aers
        where ae.acc_entity_id = aers.acc_entity_id
        and	aers.set_of_books_id = sob.set_of_books_id
        and aers.default_flag = 'Y'
        and ae.acc_entity_id = h.acc_entity_id) AS functionalCurrencyCode,
        (select gct.currency_name
        from gld_currency gc left join
        gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = functionalCurrencyCode) AS functionalCurrencyName,
        (select gc.finance_precision
        from gld_accounting_entity ae,
        gld_set_of_book        sob,
        gld_currency						 gc
        where gc.currency_code = ifnull(ae.functional_currency_code,sob.functional_currency_code)
        and ae.default_set_of_books_id = sob.set_of_books_id
        and ae.acc_entity_id = h.acc_entity_id) AS functionalCurrencyPrecision,
        h.status,
        (
        select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_REQUISITION_STATUS'
        and cv.value = h.STATUS
        ) AS statusName,
        (select ee.name
        from sys_user su,
        exp_employee ee
        where su.employee_id = ee.employee_id
        and su.user_id = h.created_by) AS createdByName,
        h.payment_method_id AS paymentMethodId,
        (select mt.description
        from csh_payment_method_tl mt
        where mt.payment_method_id = h.payment_method_id
        and mt.lang = #{request.locale}) AS paymentMethodName,
        h.description,
        h.approval_date approvalDate,
        h.closed_date closedDate,
        h.audit_flag auditFlag,
        h.audit_date auditDate,
        h.reversed_flag reversedFlag,
        h.source_pmt_req_header_id sourcePmtReqHeaderId,
        h.je_creation_status jeCreationStatus,
        h.expense_requisition_header_id expenseRequisitionHeaderId,
        h.attachment_num attachmentNum,
        DATE_FORMAT( h.requisition_payment_date, '%y-%m-%d') AS requisitionPaymentDate,
        h.schedule_repayment_date scheduleRepaymentDate,
        h.amount AS totalPaymentAmount,
        (select ifnull(sum(cprr.amount),
        0)
        from csh_payment_requisition_ref cprr
        where exists (select 1
        from csh_payment_requisition_ln cprl
        where cprl.payment_requisition_line_id =
        cprr.payment_requisition_line_id
        and cprl.payment_requisition_header_id =
        h.payment_requisition_header_id)) AS paidAmount,
        (select ifnull(sum(cr.amount),
        0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and l.payment_requisition_header_id = h.payment_requisition_header_id) AS totalPaidAmount,
        (case
        when h.status = 'CLOSED' then
        'CLOSED'
        when h.status &lt;&gt; 'COMPLETELY_APPROVED' then
        h.status
        else
        case ifnull(h.audit_flag,'N')
        when 'N' then
        'COMPLETELY_APPROVED'
        else
        case (select ifnull(sum(cr.amount),
        0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id)
        when 0 then
        'AUDIT'
        else
        case (select ifnull(sum(cr.amount),0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id) = (select h1.amount
        from csh_payment_requisition_hd h1
        where h1.payment_requisition_header_id =
        h.payment_requisition_header_id)
        when false then
        'PAID'
        else
        'COMPLETELY_PAID'

        end
        end
        end
        end) progressStatus,
        (
        select cv.meaning
        from sys_code_v cv
        where cv.code = 'DOC_PROGRESS_STATUS'
        and cv.value = (case
        when h.status = 'CLOSED' then
        'CLOSED'
        when h.status &lt;&gt; 'COMPLETELY_APPROVED' then
        h.status
        else
        case ifnull(h.audit_flag,'N')
        when 'N' then
        'COMPLETELY_APPROVED'
        else
        case (select ifnull(sum(cr.amount),
        0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id)
        when 0 then
        'AUDIT'
        else
        case (select ifnull(sum(cr.amount),0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id) = (select h1.amount
        from csh_payment_requisition_hd h1
        where h1.payment_requisition_header_id =
        h.payment_requisition_header_id)
        when false then
        'PAID'
        else
        'COMPLETELY_PAID'

        end
        end
        end
        end)
        ) progressStatusName,
        (case
        when h.status = 'CLOSED' then
        '100'
        when h.status in ('GENERATE','TAKEN_BACK','REJECTED') then
        '20'
        when h.status = 'SUBMITTED' then
        '40'
        else
        case ifnull(h.audit_flag,'N')
        when 'N' then
        '60'
        else
        case (select ifnull(sum(cr.amount),
        0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id)
        when 0 then
        '80'
        else
        case (select ifnull(sum(cr.amount),0)
        from csh_payment_requisition_ref cr,
        csh_payment_requisition_ln  l
        where cr.payment_requisition_line_id = l.payment_requisition_line_id
        and
        l.payment_requisition_header_id = h.payment_requisition_header_id) = (select h1.amount
        from csh_payment_requisition_hd h1
        where h1.payment_requisition_header_id =
        h.payment_requisition_header_id)
        when false then
        '90'
        else
        '100'

        end
        end
        end
        end) AS progressCount,
        ifnull (ifnull(
        h.expense_requisition_header_id,
        ''),
        '') instanceId,
        (select prt.auto_approve_flag
        from csh_mo_payment_req_type prt
        where prt.mo_payment_req_type_id = h.payment_req_type_id) AS autoApproveFlag,
        (select prt.report_name
        from csh_mo_payment_req_type prt
        where prt.mo_payment_req_type_id = h.payment_req_type_id) reportName
        FROM
        csh_payment_requisition_hd h left join (
        select ee.name as payee_name,
        ee.employee_code as payee_code,
        ee.employee_id as payee_id,
        ea.bank_code,
        ea.bank_name,
        ea.bank_location_code,
        ea.bank_location as bank_location_name,
        ea.province_code,
        ea.province_name,
        ea.city_code,
        ea.city_name,
        ea.account_number,
        ea.account_name,
        ea.notes,
        'EMPLOYEE' as payee_category,
        null as acc_entity_id,
        emet.employee_type_id payee_type_id,
        emet.employee_type_code payee_type_code,
        emett.description payee_type_name
        from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
        left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
        left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
        where ea.primary_flag = 'Y'
        and ea.enabled_flag = 'Y'
        and emet.enabled_flag = 'Y'
        union all
        select vt.description as payee_name,
        v.vender_code as payee_code,
        v.vender_id as payee_id,
        b.bank_code,
        bt.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        va.province_code,
        va.province_name,
        va.city_code,
        va.city_name,
        va.account_number,
        va.account_name,
        va.notes,
        'VENDER' as payee_category,
        vae.acc_entity_id,
        pvt.vender_type_id payee_type_id,
        pvt.vender_type_code payee_type_code,
        pvt.description payee_type_name
        from pur_system_vender v
        left join pur_system_vender_tl vt on(v.vender_id = vt.vender_id and vt.lang = #{request.locale})
        left join pur_vender_account va on v.vender_id = va.vender_id
        left join csh_cnaps cn on va.cnaps_code = cn.bank_location_code
        left join csh_bank b on va.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale})
        left join pur_vender_type pvt on v.vender_type_id = pvt.vender_type_id
        left join pur_vender_type_tl pvtt on(pvt.vender_type_id = pvtt.vender_type_id and pvtt.lang = #{request.locale}),
        pur_system_vender_ref_ae  vae
        right join pur_vender_account_ref_ae aae on vae.acc_entity_id = aae.acc_entity_id

        where v.vender_id = vae.vender_id
        and va.account_id = aae.account_id
        and aae.primary_flag = 'Y'
        and va.enabled_flag = 'Y'
        and vae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and pvt.enabled_flag = 'Y'
        union all
        select ct.description as payee_name,
        c.customer_code as payee_code,
        c.customer_id as payee_id,
        b.bank_code,
        b.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        ca.province_code,
        ca.province_name,
        ca.city_code,
        ca.city_name,
        ca.account_number,
        ca.account_name,
        ca.notes,
        'CUSTOMER' as payee_category,
        cae.acc_entity_id,
        oct.customer_type_id payee_type_id,
        oct.customer_type_code payee_type_code,
        octt.description payee_type_name
        from ord_system_customer c
        left join ord_system_customer_tl ct on(c.customer_id = ct.customer_id and ct.lang = #{request.locale})
        left join ord_customer_account ca on c.customer_id = ca.customer_id
        left join csh_cnaps cn on ca.cnaps_code = cn.bank_location_code
        left join csh_bank b on ca.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale})
        left join ord_customer_type oct on c.customer_type_id = oct.customer_type_id
        left join ord_customer_type_tl octt on(oct.customer_type_id = octt.customer_type_id and octt.lang = #{request.locale}),
        ord_system_customer_ref_ae  cae
        right join ord_customer_account_ref_ae aae on cae.acc_entity_id = aae.acc_entity_id

        where c.customer_id = cae.customer_id
        and ca.account_id = aae.account_id
        and ca.enabled_flag = 'Y'
        and aae.primary_flag = 'Y'
        and cae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and oct.enabled_flag = 'Y'
        ) payee on payee.payee_category = h.payee_category and
        (h.payee_category = 'EMPLOYEE' or
        payee.acc_entity_id = h.acc_entity_id) and payee.payee_id = h.payee_id
        WHERE
        h.company_id = #{request.companyId}
        AND h.created_by = #{request.userId}
        <if test="cshPayReqDateScope!=null">
        AND h.requisition_date &gt;=
            (case #{cshPayReqDateScope}
            when '000-007' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 WEEk,'%y-%m-%d'),'%y-%m-%d')
            when '000-030' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-090' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 3 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-180' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 6 MONTH,'%y-%m-%d'),'%y-%m-%d')
            when '000-365' then
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 1 YEAR,'%y-%m-%d'),'%y-%m-%d')
            else
            str_to_date(DATE_FORMAT(CURRENT_DATE-INTERVAL 20 YEAR,'%y-%m-%d'),'%y-%m-%d')
            end)
        </if>

        <if test="paymentReqTypeId!=null">
          AND h.payment_req_type_id = #{paymentReqTypeId}
        </if>
        <if test="requisitionNumber!=null">
            AND h.requisition_number like concat('%',#{requisitionNumber},'%')
        </if>
        <if test="requisitionDateFrom!=null">
            AND h.requisition_date &gt;= #{requisitionDateFrom}
        </if>
        <if test="requisitionDateTo!=null">
            AND h.requisition_date &lt;= #{requisitionDateTo}
        </if>
        <if test="amountFrom != null" >
            AND (SELECT ifnull(SUM(l.amount),0) FROM csh_payment_requisition_ln l WHERE l.payment_requisition_header_id = h.payment_requisition_header_id ) &gt;= #{amountFrom}
        </if>
        <if test="amountTo != null" >
            AND (SELECT ifnull(SUM(l.amount),0) FROM csh_payment_requisition_ln l WHERE l.payment_requisition_header_id = h.payment_requisition_header_id ) &lt;= #{amountTo}
        </if>
        <if test="employeeId != null" >
            AND h.employee_id = #{employeeId}
        </if>
        <if test="currencyCode != null" >
            AND h.currency_code = #{currencyCode}
        </if>
        <if test="payeeCategory != null" >
            AND h.payee_category = #{payeeCategory}
        </if>
        <if test="payeeId != null" >
            AND h.payee_id = #{payeeId}
        </if>
        <if test="createdDateFrom!=null">
            AND h.creation_date &gt;= #{createdDateFrom}
        </if>
        <if test="createdDateTo!=null">
            AND h.creation_date &lt;= #{createdDateTo}
        </if>
        <if test="description!=null">
            AND h.description like concat('%', #{description}, '%')
        </if>
        <if test="status!=null">
            AND h.status in (${status})
        </if>

        ORDER BY
        h.requisition_number DESC
    </select>

    <select id="queryForRequisitionReverse" parameterType="com.hand.hec.csh.dto.CshPaymentRequisitionHd" resultMap="BaseResultMap">
        SELECT
        h.payment_requisition_header_id,
        h.requisition_number,
        h.payment_req_type_id,
        typ.description req_type_desc,
        h.requisition_date,
        h.employee_id,
        ee. NAME employee_name,
        h.payee_category,
        (
        SELECT
        b.MEANING
        FROM
        sys_code_b a,
        sys_code_value_b b  left join sys_code_value_tl d on(d.code_value_id = b.code_value_id and d.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        a.code_id = b.code_id
        AND a. code = 'PAYMENT_OBJECT'
        AND b.value = h.payee_category
        ) category_desc,
        h.payee_id,
        (
        CASE
        WHEN h.payee_category = 'EMPLOYEE' THEN
        (
        SELECT
        CONCAT(
        ee.employee_code,
        '-',
        ee. NAME
        )
        FROM
        exp_employee ee
        WHERE
        ee.employee_id = h.payee_id
        )
        WHEN h.payee_category = 'CUSTOMER' THEN
        (
        SELECT
        CONCAT(
        scv.customer_code,
        '-',
        scv.description
        )
        FROM
        ord_system_customer scv left join ord_system_customer_tl scvt on(scv.customer_id = scvt.customer_id and scvt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        scv.customer_id = h.payee_id
        )
        WHEN h.payee_category = 'VENDER' THEN
        (
        SELECT
        CONCAT(
        svv.vender_code,
        '-',
        svv.description
        )
        FROM
        pur_system_vender svv left join pur_system_vender_tl svvt on(svv.vender_id = svvt.vender_id and svvt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String})
        WHERE
        svv.vender_id = h.payee_id
        )
        ELSE
        NULL
        END
        ) par_partner_name,
        h.currency_code,
        gld.currency_name,
        h.amount,
        h.description,
        h.je_creation_status,
        h. STATUS
        FROM
        csh_payment_requisition_hd h LEFT JOIN gld_currency gld ON (h.currency_code = gld.currency_code)  left join gld_currency_tl gct on(gld.currency_id = gct.currency_id and gct.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        csh_mo_payment_req_type typ left join csh_mo_payment_req_type_tl typt on(typ.MO_PAYMENT_REQ_TYPE_ID= typt.MO_PAYMENT_REQ_TYPE_ID and typt.lang=#{request.locale,jdbcType=VARCHAR,javaType=java.lang.String}),
        exp_employee ee
        WHERE
        h.employee_id = ee.employee_id
        AND typ.mo_payment_req_type_id = h.payment_req_type_id
        AND h. STATUS = 'COMPLETELY_APPROVED'
        AND h.company_id = #{cshPaymentRequisitionHd.companyId}
        AND h.closed_date IS NULL
        AND h.audit_flag = 'Y'
        AND IFNULL(h.reversed_flag, 'N') = 'N'
        <if test="cshPaymentRequisitionHd.employeeId!=null">
            and h.employee_id = #{cshPaymentRequisitionHd.employeeId}
        </if>
        <if test="cshPaymentRequisitionHd.requisitionNumber!=null">
            and h.requisition_number like concat('%',#{cshPaymentRequisitionHd.requisitionNumber},'%')
        </if>
        <if test="cshPaymentRequisitionHd.requisitionDateFrom!=null">
            and h.requisition_Date &gt;= str_to_date(#{cshPaymentRequisitionHd.requisitionDateFrom},'%Y-%m-%d')
        </if>
        <if test="cshPaymentRequisitionHd.requisitionDateTo!=null">
            and h.requisition_Date &lt;= str_to_date(#{cshPaymentRequisitionHd.requisitionDateTo},'%Y-%m-%d')
        </if>
        <if test="cshPaymentRequisitionHd.currencyCode!=null">
            and h.currency_Code = #{cshPaymentRequisitionHd.currencyCode}
        </if>
        <if test="cshPaymentRequisitionHd.payeeCategory!=null">
            and h.payee_Category = #{cshPaymentRequisitionHd.payeeCategory}
        </if>
        <if test="cshPaymentRequisitionHd.payeeId!=null">
            and h.payee_Id = #{cshPaymentRequisitionHd.payeeId}
        </if>
    </select>

    <select id="queryPaymentRequisitionHeader" resultMap="BaseResultMap">
      SELECT
        h.payment_requisition_header_id,
        h.requisition_number,
        h.company_id AS company_id,
        (select ct.company_short_name
        from fnd_company_tl ct
        where ct.company_id = h.company_id
        and ct.lang = #{request.locale}) AS companyName,

        h.position_id AS position_id,
        (select opt.description
        from exp_org_position_tl opt
        where opt.position_id = h.position_id
        and opt.lang = #{request.locale}) AS positionName,
         h.unit_id AS unit_id,
        (select ou.description
        from exp_org_unit_tl ou
        where ou.unit_id = h.unit_id
        and ou.lang = #{request.locale}) AS unitName,
        h.employee_id AS employee_id,
        (select ee.name
        from exp_employee ee
        where ee.employee_id = h.employee_id) AS employeeName,
        h.acc_entity_id AS acc_entity_id,
        (select aet.acc_entity_name
        from gld_accounting_entity_tl aet
        where aet.acc_entity_id = h.acc_entity_id
        and aet.lang = #{request.locale}) AS accEntityName,
        DATE_FORMAT(h.requisition_date,'%Y-%m-%d')  AS requisitionDate,
        h.payment_req_type_id AS payment_req_type_id,
        (select rtt.description
        from csh_mo_payment_req_type_tl rtt
        where rtt.mo_payment_req_type_id = h.payment_req_type_id
        and rtt.lang = #{request.locale}) AS paymentReqTypeName,
        h.payment_method_id AS payment_method_id,
        (select mt.description
        from csh_payment_method_tl mt
        where mt.payment_method_id = h.payment_method_id
        and mt.lang = #{request.locale}) AS paymentMethodName,
        h.payee_category,
        (select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_OBJECT'
        and cv.value = h.payee_category
        ) AS payeeCategoryName,
        h.payee_id AS payee_id,
        (case
        when h.payee_category = 'EMPLOYEE' then
        (select ee.name
        from exp_employee ee
        where ee.employee_id = h.payee_id)
        when h.payee_category = 'VENDER' then
        (select svt.description
        from pur_system_vender_tl svt
        where svt.vender_id = h.payee_id
        and svt.lang = #{request.locale})
        when h.payee_category = 'CUSTOMER' then
        (select sct.description
        from ord_system_customer_tl sct
        where sct.customer_id = h.payee_id
        and sct.lang = #{request.locale})
        end) AS payeeName,
        h.amount,
        h.currency_code AS currency_code,
        (select gct.currency_name
        from gld_currency gc left join
        gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = h.currency_code) AS currencyName,
        (select gc.finance_precision
        from gld_currency gc
        where gc.currency_code = h.currency_code) AS paymentCurrencyPrecision,
        (select ifnull(ae.functional_currency_code,
        sob.functional_currency_code)
        from gld_accounting_entity ae,
        gld_set_of_book        sob,
                gld_acc_entity_ref_sob aers
        where ae.acc_entity_id = aers.acc_entity_id
                and	aers.set_of_books_id = sob.set_of_books_id
                and aers.default_flag = 'Y'
        and ae.acc_entity_id = h.acc_entity_id ) AS functionalCurrencyCode,
        (select gct.currency_name
        from gld_currency gc left join
        gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = functionalCurrencyCode) AS functionalCurrencyName,
        (select gc.finance_precision
        from gld_currency gc
        where gc.currency_code = functionalCurrencyCode) AS functionalCurrencyPrecision,
        DATE_FORMAT( h.requisition_payment_date, '%y-%m-%d') AS requisitionPaymentDate,
        h.description,
        h.status,
        (select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_REQUISITION_STATUS'
        and cv.value = h.STATUS
        ) AS statusName,
        h.approval_date,
        (select ee.name
        from sys_user su,
        exp_employee ee
        where su.employee_id = ee.employee_id
        and su.user_id = h.created_by) AS createdByName,
        h.closed_date,
        h.audit_flag,
        h.audit_date,
        h.reversed_flag,
        h.source_pmt_req_header_id,
        h.je_creation_status,
        h.expense_requisition_header_id,
        h.attachment_num,
        h.schedule_repayment_date,
        payee.bank_code AS bankCode,
        payee.bank_name AS bankName,
        payee.bank_location_code AS bankLocationCode,
        payee.bank_location_name AS bankLocationName,
        payee.province_code AS provinceCode,
        payee.province_name AS provinceName,
        payee.city_code AS cityCode,
        payee.city_name AS cityName,
        payee.account_number AS accountNumber,
        payee.account_name AS accountName
        FROM
        csh_payment_requisition_hd h
        left join
        (
        select ee.name as payee_name,
        ee.employee_code as payee_code,
        ee.employee_id as payee_id,
        ea.bank_code,
        ea.bank_name,
        ea.bank_location_code,
        ea.bank_location as bank_location_name,
        ea.province_code,
        ea.province_name,
        ea.city_code,
        ea.city_name,
        ea.account_number,
        ea.account_name,
        ea.notes,
        'EMPLOYEE' as payee_category,
        null as acc_entity_id,
        emet.employee_type_id payee_type_id,
        emet.employee_type_code payee_type_code,
        emett.description payee_type_name
        from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
        left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
        left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
        where ea.primary_flag = 'Y'
        and ea.enabled_flag = 'Y'
        and emet.enabled_flag = 'Y'
        union all
        select vt.description as payee_name,
        v.vender_code as payee_code,
        v.vender_id as payee_id,
        b.bank_code,
        bt.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        va.province_code,
        va.province_name,
        va.city_code,
        va.city_name,
        va.account_number,
        va.account_name,
        va.notes,
        'VENDER' as payee_category,
        vae.acc_entity_id,
        pvt.vender_type_id payee_type_id,
        pvt.vender_type_code payee_type_code,
        pvt.description payee_type_name
        from pur_system_vender v
        left join pur_system_vender_tl vt on(v.vender_id = vt.vender_id and vt.lang = #{request.locale})
        left join pur_vender_account va on v.vender_id = va.vender_id
        left join csh_cnaps cn on va.cnaps_code = cn.bank_location_code
        left join csh_bank b on va.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale})
        left join pur_vender_type pvt on v.vender_type_id = pvt.vender_type_id
        left join pur_vender_type_tl pvtt on(pvt.vender_type_id = pvtt.vender_type_id and pvtt.lang = #{request.locale}),
        pur_system_vender_ref_ae  vae
        right join pur_vender_account_ref_ae aae on vae.acc_entity_id = aae.acc_entity_id

        where v.vender_id = vae.vender_id
        and va.account_id = aae.account_id
        and aae.primary_flag = 'Y'
        and va.enabled_flag = 'Y'
        and vae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and pvt.enabled_flag = 'Y'
        union all
        select ct.description as payee_name,
        c.customer_code as payee_code,
        c.customer_id as payee_id,
        b.bank_code,
        b.bank_name,
        cn.bank_location_code,
        cn.bank_location_name,
        ca.province_code,
        ca.province_name,
        ca.city_code,
        ca.city_name,
        ca.account_number,
        ca.account_name,
        ca.notes,
        'CUSTOMER' as payee_category,
        cae.acc_entity_id,
        oct.customer_type_id payee_type_id,
        oct.customer_type_code payee_type_code,
        octt.description payee_type_name
        from ord_system_customer c
        left join ord_system_customer_tl ct on(c.customer_id = ct.customer_id and ct.lang = #{request.locale})
        left join ord_customer_account ca on c.customer_id = ca.customer_id
        left join csh_cnaps cn on ca.cnaps_code = cn.bank_location_code
        left join csh_bank b on ca.bank_id = b.bank_id
        left join csh_bank_tl bt on(b.bank_id = bt.bank_id and bt.lang = #{request.locale})
        left join ord_customer_type oct on c.customer_type_id = oct.customer_type_id
        left join ord_customer_type_tl octt on(oct.customer_type_id = octt.customer_type_id and octt.lang = #{request.locale}),
        ord_system_customer_ref_ae  cae
        right join ord_customer_account_ref_ae aae on cae.acc_entity_id = aae.acc_entity_id
        where c.customer_id = cae.customer_id
        and ca.account_id = aae.account_id
        and ca.enabled_flag = 'Y'
        and aae.primary_flag = 'Y'
        and cae.enabled_flag = 'Y'
        and aae.enabled_flag = 'Y'
        and oct.enabled_flag = 'Y'
        ) payee on payee.payee_category = h.payee_category and
        (h.payee_category = 'EMPLOYEE' or
        payee.acc_entity_id = h.acc_entity_id) and payee.payee_id = h.payee_id
        WHERE
        h.payment_requisition_header_id = #{paymentRequisitionHeaderId}
        UNION ALL
        SELECT
        NULL AS payment_requisition_header_id,
        NULL AS requisition_number,
        #{request.companyId} AS companyId,
        (select ct.company_short_name
        from fnd_company_tl ct
        where ct.company_id = #{request.companyId}
        and ct.lang = #{request.locale}) AS companyName,

        (select eea.position_id
        from exp_employee_assign eea
        where eea.employee_id = #{employeeId}
         and eea.company_id = #{request.companyId}
         and eea.primary_position_flag = 'Y'
         and eea.enabled_flag = 'Y') AS positionId,
        (select opt.description
        from exp_org_position_tl opt
        where opt.position_id = positionId
        and opt.lang = #{request.locale}) AS positionName,

        (select op.unit_id
        from exp_org_position op
        where op.position_id = positionId) AS unitId,
        (select ou.description
        from exp_org_unit_tl ou
        where ou.unit_id = unitId
        and ou.lang = #{request.locale}) AS unitName,

        #{employeeId} AS employee_id,
        (select ee.name
        from exp_employee ee
        where ee.employee_id = #{employeeId}) AS employeeName,
        #{accEntityId} AS acc_entity_id,
        (select aet.acc_entity_name
        from gld_accounting_entity_tl aet
        where aet.acc_entity_id = #{accEntityId}
        and aet.lang = #{request.locale}) AS accEntityName,
        CURRENT_DATE AS requisitionDate,
        #{paymentReqTypeId} AS payment_req_type_id,
        (select rtt.description
        from csh_mo_payment_req_type_tl rtt
        where rtt.mo_payment_req_type_id = #{paymentReqTypeId}
        and rtt.lang = #{request.locale}) AS paymentReqTypeName,
        (select rt.payment_method_id
        from csh_mo_payment_req_type rt
        where rt.mo_payment_req_type_id = #{paymentReqTypeId}) AS paymentMethodId,
        (select mt.description
        from csh_payment_method_tl mt
        where mt.payment_method_id = paymentMethodId
        and mt.lang = #{request.locale}) AS paymentMethodName,
        'EMPLOYEE' AS payee_category,
        (select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_OBJECT'
        and cv.value = payee_category) AS payeeCategoryName,
        #{employeeId} AS payee_id,
        (select ee.name
        from exp_employee ee
        where ee.employee_id = payee_id) AS payeeName,
        NULL AS amount,
        (select
        ifnull(prt.currency_code,
        (select ae.pay_currency_code
        from gld_accounting_entity ae,
             gld_set_of_book sob,
             gld_acc_entity_ref_sob aers
        where ae.acc_entity_id = aers.acc_entity_id
        and	aers.set_of_books_id = sob.set_of_books_id
        and aers.default_flag = 'Y'
        and ae.acc_entity_id = #{accEntityId}))
        from csh_mo_payment_req_type prt
        where prt.mo_payment_req_type_id = #{paymentReqTypeId}) AS currencyCode,
        (select gct.currency_name
        from gld_currency gc 
        left join gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = currencyCode) AS currencyName,
        (select gc.finance_precision
        from gld_currency gc
        where gc.currency_code = currencyCode) AS paymentCurrencyPrecision,
        (select ifnull(ae.functional_currency_code,
                sob.functional_currency_code)
        from gld_accounting_entity ae,
             gld_set_of_book        sob,
             gld_acc_entity_ref_sob aers
        where ae.acc_entity_id = aers.acc_entity_id
        and	aers.set_of_books_id = sob.set_of_books_id
        and aers.default_flag = 'Y'
        and ae.acc_entity_id = #{accEntityId} ) AS functionalCurrencyCode,	
        (select gct.currency_name
        from gld_currency gc 
        left join gld_currency_tl gct on gc.currency_id = gct.currency_id
        and gct.lang = #{request.locale}
        where gc.currency_code = functionalCurrencyCode) AS functionalCurrencyName,
        (select gc.finance_precision
        from gld_currency gc
        where gc.currency_code = functionalCurrencyCode) AS functionalCurrencyPrecision,
        CURRENT_DATE AS requisitionPaymentDate,
        '' AS description,
        'GENERATE' AS status,
        (select cv.meaning
        from sys_code_v cv
        where cv.code = 'PAYMENT_REQUISITION_STATUS'
        and cv.value = 'GENERATE') AS statusName,
        null AS approval_date,
        (select ee.name
        from sys_user su,
        exp_employee ee
        where su.employee_id = ee.employee_id
        and su.user_id = #{request.userId}) AS createdByName,
        NULL AS closed_date,
        NULL AS audit_flag,
        NULL AS audit_date,
        NULL AS reversed_flag,
        NULL AS source_pmt_req_header_id,
        NULL AS je_creation_status,
        NULL AS expense_requisition_header_id,
        NULL AS attachment_num,
        NULL AS schedule_repayment_date,
        (select ea.bank_code
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS bankCode,
        (select ea.bank_name
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId})  AS bankName,
        (select ea.bank_location_code
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS bankLocationCode,
        (select ea.bank_location as bank_location_name
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS bankLocationName,
        (select ea.province_code
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS provinceCode,
        (select ea.province_name
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS provinceName,
        (select ea.city_code
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS cityCode,
        (select ea.province_name
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS cityName,
        (select ea.account_number
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS accountNumber,
        (select ea.account_name
            from exp_employee ee left join exp_employee_account ea on ee.employee_id = ea.employee_id
            left join exp_mo_employee_type emet on ee.employee_type_id = emet.employee_type_id
            left join exp_mo_employee_type_tl emett on (emet.employee_type_id = emett.employee_type_id and emett.lang = #{request.locale})
            where ea.primary_flag = 'Y'
            and ea.enabled_flag = 'Y'
            and emet.enabled_flag = 'Y'
            and ee.employee_id = #{employeeId}) AS accountName
        FROM
        DUAL
        WHERE
        #{paymentRequisitionHeaderId} IS NULL
    </select>

    <select id="selectPayReqRefReport" resultType="java.util.Map">
        SELECT
            s.exp_report_header_id expReportHeaderId,
            (
        SELECT
            cch.contract_number
        FROM
            con_contract_header cch,
            con_document_flow s
        WHERE
            contract_header_id = s.document_id
            AND s.document_type = 'CON_CONTRACT_HEADERS'
            AND s.source_document_type = 'EXP_REPORT_HEADERS'
            AND s.source_document_id = s.exp_report_header_id
            ) contactNumber,
            s.exp_report_number expRequisitionNumber,
            s.employee_id employeeId,
            s.audit_flag auditFlag,
            date_format( s.audit_date, '%y-%m-%d' ) auditDate,
            ( SELECT es.employee_code FROM exp_employee es WHERE es.employee_id = s.employee_id ) employeeCode,
            ( SELECT es.NAME FROM exp_employee es WHERE es.employee_id = s.employee_id ) employeeName,
            s.payee_category payeeCategory,
            ( SELECT cv.meaning FROM sys_code_value_vl cv WHERE cv.CODE = 'PAYMENT_OBJECT' AND cv.VALUE = s.payee_category ) payeeCategoryName,
            s.payee_id payeeId,
            (
        CASE
            s.payee_category
            WHEN 'EMPLOYEE' THEN
            ( SELECT CONCAT( ee.employee_code, '-', ee.NAME ) FROM exp_employee ee WHERE ee.employee_id = s.payee_id )
            WHEN 'VENDER' THEN
            (
        SELECT
            CONCAT( psv.vender_code, '-', psvt.description )
        FROM
            pur_system_vender psv
            LEFT JOIN pur_system_vender_tl psvt ON psv.vender_id = psvt.vender_id
            AND psvt.lang = #{request.locale}
        WHERE
            psv.vender_id = s.payee_id
            )
            WHEN 'CUSTOMER' THEN
            (
        SELECT
            CONCAT( osc.customer_code, '-', osct.description )
        FROM
            ord_system_customer osc
            LEFT JOIN ord_system_customer_tl osct ON ( osc.customer_id = osct.customer_id AND osct.lang = #{request.locale} )
        WHERE
            osc.customer_id = s.payee_id
            )
        END
            ) payeeName,
            s.payment_currency_code paymentCurrencyCode,
            (
        SELECT
            gct.currency_name
        FROM
            gld_currency gc
            LEFT JOIN gld_currency_tl gct ON gc.currency_id = gct.currency_id
            AND gct.lang = #{request.locale}
        WHERE
            gc.currency_code = s.payment_currency_code
            ) currencyName,
            s.pay2fun_exchange_type pay2funExchangeType,
            s.pay2fun_exchange_rate pay2funExchangeRate,
            ( SELECT SUM( t.report_functional_amount ) FROM exp_report_line t WHERE t.exp_report_header_id = s.exp_report_header_id ) quarterNum,
            ( SELECT SUM( t.report_functional_amount ) FROM exp_report_line t WHERE t.exp_report_header_id = s.exp_report_header_id ) quarterNumFun,
            s.period_name periodName,
            s.je_creation_status jeCreationStatus,
            s.gld_interface_flag gldInterfaceFlag,
            s.created_by createdBy,
            s.last_updated_by lastUpdatedBy,
            s.last_update_date lastUpdateDate,
            date_format ( s.report_date, '%y-%m-%d' ) requisitionDate,
            s.mo_exp_report_type_id expRequisitionTypeId,
            (
        SELECT
            rtt.description
        FROM
            exp_mo_report_type rt,
            exp_mo_report_type_tl rtt
        WHERE
            rt.mo_exp_report_type_id = rtt.mo_exp_report_type_id
            AND rtt.lang = #{request.locale}
            AND rt.mo_exp_report_type_id = s.mo_exp_report_type_id
            ) typeDescription,
            ( SELECT rt.mo_exp_report_type_code FROM exp_mo_report_type rt WHERE rt.mo_exp_report_type_id = s.mo_exp_report_type_id ) typeCode,
            s.description,
            s.report_status requisitionStatusValue,
            ( SELECT cv.meaning FROM sys_code_value_vl cv WHERE cv.CODE = 'EXP_EXPENSE_REPORT_STATUS' AND cv.VALUE = s.report_status ) requisitionStatus,
            s.creation_date creationDate,
            date_format ( s.creation_date, '%y-%m-%d' ) creationDate1,
            (
        SELECT
            ifnull ( SUM( w.csh_write_off_amount ), 0 )
        FROM
            csh_write_off w
        WHERE
            w.document_source = 'EXPENSE_REPORT'
            AND w.document_header_id = s.exp_report_header_id
            ) payedAmount,
            ( SELECT SUM( erps.due_amount ) FROM exp_report_pmt_schedule erps WHERE erps.exp_report_header_id = s.exp_report_header_id ) - (
        SELECT
            ifnull ( SUM( w.csh_write_off_amount ), 0 )
        FROM
            csh_write_off w
        WHERE
            w.document_source = 'EXPENSE_REPORT'
            AND w.document_header_id = s.exp_report_header_id
            ) unpaymentAmount
        FROM
            exp_report_pmt_schedule erps,
            exp_report_header s,
            csh_write_off cwo,
            csh_transaction_line ctl,
            csh_transaction_header cth
        WHERE
            erps.exp_report_header_id = s.exp_report_header_id
            AND erps.payment_schedule_line_id = cwo.document_line_id
            AND erps.exp_report_header_id = cwo.document_header_id
            AND cwo.document_source = 'EXPENSE_REPORT'
            AND cwo.write_off_type = 'PREPAYMENT_EXPENSE_REPORT'
            AND cwo.csh_transaction_line_id = ctl.transaction_line_id
            AND ctl.transaction_header_id = cth.transaction_header_id
            AND EXISTS (
            (
        SELECT
            c.document_header_id
        FROM
            csh_transaction_header cthx,
            csh_transaction_line ctlx,
            csh_write_off c
        WHERE
            cthx.transaction_header_id = ctlx.transaction_header_id
            AND ctlx.transaction_line_id = c.csh_transaction_line_id
            AND cthx.transaction_header_id = cth.source_payment_header_id
            AND c.document_header_id = #{paymentRequisitionHeaderId}
            )
            )
        ORDER BY
	  s.exp_report_header_id DESC
    </select>

    <select id="selectPayReqRefRegister" resultType="java.util.Map">
        SELECT
            t1.register_hds_id registerHdsId,
            t1.register_number registerNumber,
            t1.employee_id employeeId,
            ( SELECT ee.NAME FROM exp_employee ee WHERE ee.employee_id = t1.employee_id ) AS employeeName,
            t1.acc_entity_id accEntityId,
            ( SELECT gaev.acc_entity_name FROM gld_accounting_entity_tl gaev WHERE gaev.acc_entity_id = t1.acc_entity_id AND gaev.lang = #{request.locale} ) AS accEntityName,
            t1.company_id companyId,
            ( SELECT fc.company_short_name FROM fnd_company_tl fc WHERE fc.company_id = t1.company_id AND fc.lang = #{request.locale} ) AS companyName,
            ( SELECT cbav.bank_account_num FROM csh_bank_account cbav WHERE cbav.bank_account_id = t1.bank_account_id ) AS accountNumber,
            t1.payment_method_id paymentMethodId,
            ( SELECT mv.description FROM csh_payment_method_tl mv WHERE mv.payment_method_id = t1.payment_method_id AND mv.lang = #{request.locale} ) AS paymentMethodName,
            t1.repayment_date repaymentDate,
            t1.amount,
            t1.repayment_bank_note repaymentBankNote,
            t1.description,
            t1.repayment_status repaymentStatus,
            ( SELECT cv.meaning FROM sys_code_value_vl cv WHERE cv.CODE = 'CSH_REPAYMENT_REGISTER_STATUS' AND cv.VALUE = t1.repayment_status ) repaymentStatusName,
            (
        SELECT
            concat( e.employee_code, '-', e.NAME )
        FROM
            exp_employee e,
            sys_user u
        WHERE
            u.user_id = t1.cashier_user_id
            AND t1.employee_id = e.employee_id
            ) AS cashierEmployeeName,
            t1.cashier_user_id cashierUserId,
            t1.cashier_confirm_date cashierConfirmDate,
            t1.accounting_user_id accountingUserId,
            (
        SELECT
            concat( e.employee_code, '-', e.NAME )
        FROM
            exp_employee e,
            sys_user u
        WHERE
            u.user_id = t1.accounting_user_id
            AND t1.employee_id = e.employee_id
            ) AS accountingEmployeeName,
            t1.accounting_confirm_date accountingConfirmDate
        FROM
            csh_repayment_register_hd t1
        WHERE
            EXISTS (
        SELECT
            1
        FROM
            csh_repayment_register_ln crrl,
            csh_payment_requisition_ln cprl,
            csh_payment_requisition_hd cprh
        WHERE
            t1.register_hds_id = crrl.register_hds_id
            AND crrl.payment_requisition_line_id = cprl.payment_requisition_line_id
            AND cprl.payment_requisition_header_id = cprh.payment_requisition_header_id
            AND cprh.payment_requisition_header_id = #{paymentRequisitionHeaderId}
            )
        ORDER BY
	register_hds_id DESC
    </select>
</mapper>